<project name='Demo' default="build" basedir=".">

	<!-- ========================================================================= -->
	<!--                          Property definitions                             -->
	<!-- ========================================================================= -->

	<property name="jppf"        value="${basedir}/../.."/>
	<property name="jppf.lib"    value="${jppf}/lib"/>
	<property name="jppf.build"  value="${jppf}/build"/>
	<property name="config.dir"  value="${basedir}/config"/>
	<property name="classes.dir" value="${basedir}/classes"/>	
	<property name="src.dir"     value="${basedir}/src"/>

	<!-- ========================================================================= -->
	<!--                           Classpath definitions                           -->
	<!-- ========================================================================= -->

	<path id="project.classpath">
		<pathelement location="${classes.dir}"/>
		<pathelement location="${jppf.build}/bootstrap"/>
		<pathelement location="${jppf.build}/classes"/>
		<fileset dir="${jppf.lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

  <path id="node.classpath">
		<pathelement location="${config.dir}"/>
		<pathelement location="${jppf.build}/bootstrap"/>
  </path>

  <path id="gui.classpath">
		<pathelement location="${config.dir}"/>
    <path refid="project.classpath"/>	
  </path>

  <path id="client.classpath">
		<pathelement location="${config.dir}"/>
		<pathelement location="${classes.dir}"/>
		<pathelement location="${jppf.build}/classes"/>
		<pathelement location="${jppf.build}/bootstrap"/>
		<pathelement location="${jppf.lib}/log4j/log4j-1.2.9.jar"/>
  </path>

  <path id="class.server.classpath">
		<pathelement location="${config.dir}"/>
    <path refid="project.classpath"/>	
  </path>

	<!-- ========================================================================= -->
	<!--                                    Clean                                  -->
	<!-- ========================================================================= -->

  <target name="clean">
    <delete dir="${classes.dir}" quiet="true"/>
  </target>               

	<!-- ========================================================================= -->
	<!--                                    Init                                   -->
	<!-- ========================================================================= -->

	<target name="init" description="Initialize ressources">
 		<mkdir dir="${classes.dir}"/>
	</target>

	<!-- ========================================================================= -->
	<!--                           Build the application                           -->
	<!-- ========================================================================= -->

  <target name="build" depends="init, compile"/>

	<target name="rebuild" depends="clean, init, compile"/>

	<!-- ========================================================================= -->
	<!--                         Compile the application                           -->
	<!-- ========================================================================= -->

	<target name="compile" description="Compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}"
			debug="on" deprecation="off" optimize="on" includes="**/*.java">
	    <classpath refid="project.classpath"/>
	    <compilerarg line="-Xlint:unchecked"/>
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java"/>
				<exclude name="**/*.html"/>
			</fileset>
		</copy>
  </target>

	<!-- ========================================================================= -->
	<!--                     Run the test processes                                -->
	<!-- ========================================================================= -->

	<target name="run">
		<parallel>
			<antcall target="run.class.server"/>
			<sequential>
				<sleep milliseconds="5000"/>
				<antcall target="run.local"/>
			</sequential>
		</parallel>
	</target>

	<target name="run.demo1">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="1000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="2000"/>
				<antcall target="run.ui"/>
			</sequential>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.long.task"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.demo2">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="6000"/>
				<antcall target="run.client"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.local.2">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="4000"/>
				<antcall target="run.node2"/>
			</sequential>
			<sequential>
				<sleep milliseconds="6000"/>
				<antcall target="run.client"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.long.task">
		<echo message="starting the 'Long task' demo application"/>
		<java fork="yes" classname="sample.tasklength.LongTaskRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
		</java>       
	</target>

	<target name="run.matrix">
		<echo message="starting the 'Matrix Multiplication' demo application"/>
		<java fork="yes" classname="sample.matrix.MatrixRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
		</java>       
	</target>

	<target name="run.matrix2">
		<echo message="starting the second demo application"/>
		<java fork="yes" classname="sample.matrix.MatrixRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client-2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client-2.properties"/>
		</java>       
	</target>

	<target name="run.driver">
		<echo message="starting the JPPF driver"/>
		<java fork="yes" classname="org.jppf.server.DriverLauncher" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx32m"/>
			<jvmarg value="-Djppf.config=jppf-driver.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-driver.properties"/>
		</java>       
	</target>

	<target name="run.node1">
		<echo message="starting local node"/>
		<java fork="yes" classname="org.jppf.classloader.NodeLauncher" classpathref="node.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=node1.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-node1.properties"/>
		</java>       
	</target>

	<target name="run.node2">
		<echo message="starting second local node"/>
		<java fork="yes" classname="org.jppf.classloader.NodeLauncher" classpathref="node.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=node2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-node2.properties"/>
		</java>       
	</target>

	<target name="run.ui">
		<echo message="starting the server monitoring GUI"/>
		<java fork="yes" classname="org.jppf.ui.monitoring.MonitoringPanel" classpathref="gui.classpath">
			<jvmarg value="-Djppf.config=jppf-gui.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-gui.properties"/>
		</java>       
	</target>

</project> 
