<!--
  JPPF
  Copyright (C) 2005-2018 JPPF Team. 
  http://www.jppf.org

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project name="JPPF-modules" basedir="..">

  <!-- ========================================================================= -->
  <!--                 Package the runtime components for deployment             -->
  <!-- ========================================================================= -->

  <target name="runtime" depends="rebuild, runtime.setup, runtime.driver, runtime.node, runtime.gui, application.template, runtime.jmxremote.nio"/>

  <!--
    Build a distributable zip module with predefined base libraries.
    Attributes:
    - module: the name of the module to buld
    - zip-prefix: the prefix of the files in the zip, defaults to the value of 'module'.
    Elements:
    - module-elements: additonal zip filesets to add to the zip (optional)
  -->
  <macrodef name="package-module">
    <attribute name="module"/>
    <attribute name="zip-prefix" default="@{module}"/>
    <element name="module-elements" optional="true"/>
    <sequential>
      <local name="@{module}.prefix"/>
      <property name="@{module}.prefix" value="${app.ver}-@{zip-prefix}"/>
      <echoprop name="@{module}.prefix"/>
      <local name="runtime.@{module}.file"/>
      <property name="runtime.@{module}.file" value="${build}/${@{module}.prefix}.zip"/>
      <delete file="${runtime.@{module}.file}" quiet="true"/>
      <zip destfile="${runtime.@{module}.file}">
        <zipfileset dir="${basedir}" prefix="${@{module}.prefix}" includes="${license.file}"/>
        <zipfileset dir="${build}/config/@{module}" prefix="${@{module}.prefix}" excludes="**/*.sh,JPPFDriver,JPPFNode" erroronmissingarchive="false"/>
        <zipfileset dir="${build}/config/@{module}" prefix="${@{module}.prefix}" includes="**/*.sh,JPPFDriver,JPPFNode" filemode="755" erroronmissingarchive="false"/>
        <zipfileset dir="${build}" prefix="${@{module}.prefix}/lib" includes="jppf-common-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${@{module}.prefix}/lib-src" includes="jppf-common-src-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${@{module}.prefix}/lib" includes="jppf-jmxremote-nio-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${@{module}.prefix}/lib-src" includes="jppf-jmxremote-nio-src-${version.number}.jar"/>
        <zipfileset dir="${lib}/ApacheCommons" prefix="${@{module}.prefix}/lib" includes="${ApacheCommons.inc}"/>
        <zipfileset dir="${lib}/log4j" prefix="${@{module}.prefix}/lib" includes="${log4j.inc}"/>
        <zipfileset dir="${lib}/slf4j" prefix="${@{module}.prefix}/lib" includes="${slf4j.inc}"/>
        <zipfileset dir="${lib}/LZ4" prefix="${@{module}.prefix}/lib" includes="${LZ4.inc}"/>
        <module-elements/>
      </zip>
    </sequential>
  </macrodef>

  <!-- =========== Handle version numbers =========== -->

  <target name="runtime.setup">
    <delete dir="${build}/config" quiet="true"/>
    <mkdir dir="${build}/config"/>
    <copy todir="${build}/config">
      <fileset dir="${config}"/>
    </copy>
    <replace dir="${build}/config" includes="**/*.conf">
      <replacefilter token="@version@" value="${version.number}"/>
      <replacefilter token="@jmx_version@" value="${jmx.version.number}"/>
    </replace>
  </target>

  <!-- =========== Application template packaging =========== -->

  <target name="application.template">
    <package-module module="application-template">
      <module-elements>
        <zipfileset dir="${build}" prefix="${application-template.prefix}/lib" includes="jppf-client-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${application-template.prefix}/lib-src" includes="jppf-client-src-${version.number}.jar"/>
        <zipfileset dir="${application.template}/src" prefix="${application-template.prefix}/src" includes="**/*.*"/>
        <zipfileset dir="${application.template}/classes" prefix="${application-template.prefix}/classes" includes="**/*.*"/>
      </module-elements>
    </package-module>
  </target>

  <!-- =========== Driver packaging =========== -->

  <target name="runtime.driver">
    <package-module module="driver">
      <module-elements>
        <zipfileset dir="${lib}/HikariCP" prefix="${@{module}.prefix}/lib" includes="*.jar"/>
        <zipfileset dir="${config}/node/config" prefix="${driver.prefix}/config" includes="jppf.policy"/>
        <zipfileset dir="${build}" prefix="${driver.prefix}/lib" includes="jppf-node-${version.number}.jar,jppf-server-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${driver.prefix}/lib-src" includes="jppf-node-src-${version.number}.jar,jppf-server-src-${version.number}.jar"/>
        <zipfileset dir="${lib}/JNA" prefix="${@{module}.prefix}/lib" includes="${JNA.inc}"/>
        <zipfileset dir="${lib}/oshi" prefix="${@{module}.prefix}/lib" includes="${oshi.inc}"/>
      </module-elements>
    </package-module>
  </target>

  <!-- =========== Node packaging =========== -->

  <target name="runtime.node">
    <package-module module="node">
      <module-elements>
        <zipfileset dir="${build}" prefix="${node.prefix}/lib" includes="jppf-node-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${node.prefix}/lib-src" includes="jppf-node-src-${version.number}.jar"/>
        <zipfileset dir="${lib}/JNA" prefix="${@{module}.prefix}/lib" includes="${JNA.inc}"/>
        <zipfileset dir="${lib}/oshi" prefix="${@{module}.prefix}/lib" includes="${oshi.inc}"/>
      </module-elements>
    </package-module>
  </target>

  <!-- =========== GUI packaging =========== -->

  <target name="runtime.gui">
    <package-module module="gui" zip-prefix="admin-ui">
      <module-elements>
        <zipfileset dir="${build}" prefix="${gui.prefix}/lib" includes="jppf-client-${version.number}.jar,jppf-admin-${version.number}.jar"/>
        <zipfileset dir="${build}" prefix="${gui.prefix}/lib-src" includes="jppf-client-src-${version.number}.jar,jppf-admin-src-${version.number}.jar"/>
        <zipfileset dir="${lib}/JFreeChart" prefix="${gui.prefix}/lib" includes="${JFreeChart.inc}"/>
        <zipfileset dir="${lib}/JGoodies" prefix="${gui.prefix}/lib" includes="${JGoodies.inc}"/>
        <zipfileset dir="${lib}/Groovy" prefix="${gui.prefix}/lib" includes="${Groovy.inc}"/>
        <zipfileset dir="${lib}/MigLayout" prefix="${gui.prefix}/lib" includes="${MigLayout.inc}"/>
        <zipfileset dir="${lib}/Jung" prefix="${gui.prefix}/lib" includes="*${Jung.inc}"/>
        <zipfileset dir="${lib}/RSyntaxTextArea" prefix="${gui.prefix}/lib" includes="*${RSyntaxTextArea.inc}"/>
      </module-elements>
    </package-module>
  </target>

  <!-- =========== JPPF JMX REMOTE =========== -->
  
  <target name="runtime.jmxremote.nio">
    <delete dir="${build}/config/jmxremote-nio" quiet="true"/>
    <mkdir dir="${build}/config/jmxremote-nio"/>
    <package-module module="jmxremote-nio" />
  </target>

</project> 
