<!--
	Java Parallel Processing Framework.
	 Copyright (C) 2005-2009 JPPF Team. 
	http://www.jppf.org

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<project name="jppf" default="build" basedir="..">

	<!-- ========================================================================= -->
	<!--                          Property definitions                             -->
	<!-- ========================================================================= -->

	<property name="common" value="${basedir}/../common"/>
	<property name="admin" value="${basedir}/../admin"/>
	<property name="client" value="${basedir}/../client"/>
	<property name="node" value="${basedir}/../node"/>
	<property name="server" value="${basedir}/../server"/>
	<property name="demo" value="${basedir}/../demo"/>
	<property name="jca-client" value="${basedir}/../jca-client"/>
	<property name="jppfQuickStart" value="${basedir}/../JPPFQuickStart"/>
	<property name="gigaspaces" value="${basedir}/../JPPF-GigaSpaces"/>

	<property name="build.properties.file" value="${basedir}/bin/build.properties"/>
  <property file="${gigaspaces}/build.properties"/>
  <property file="${build.properties.file}"/>
	<property name="build.number.file" value="${basedir}/bin/build.number"/>
	<property name="bin" value="${basedir}/bin"/>	
	<property name="data" value="${basedir}/data"/>	
	<property name="config" value="${basedir}/config"/>	
	<property name="build" value="${basedir}/build"/>	
	<property name="deploy" value="${build}/deploy"/>	
	<property name="deploy.lib" value="${deploy}/lib"/>
	<property name="deploy.build" value="${deploy}/build"/>
	<property name="deploy.config" value="${deploy}/config"/>	
	<property name="classes" value="${build}/classes"/>
	<property name="src" value="${basedir}/src"/>
	<property name="lib" value="${basedir}/lib"/>
	<property name="docs" value="${basedir}/docs"/>
	<property name="home" value="${docs}/home"/>
	<property name="examples" value="${basedir}/examples"/>
	<property name="javadoc" value="${docs}/api"/>
	<property name="app.jar.file" value="${ant.project.name}.jar"/>
	<property name="license.file" value="LICENSE.txt"/>
	<property name="runtime" value="${build}/runtime"/>
	<property name="runtime.driver" value="${build}/runtime/driver"/>
	<property name="runtime.multiplexer" value="${build}/runtime/multiplexer"/>
	<property name="runtime.node" value="${build}/runtime/node"/>
	<property name="runtime.gui" value="${build}/runtime/gui"/>

	<!-- ========================================================================= -->
	<!--                           Classpath definitions                           -->
	<!-- ========================================================================= -->

	<path id="project.classpath">
		<pathelement location="${common}/classes"/>
		<pathelement location="${node}/classes"/>
		<pathelement location="${admin}/classes"/>
		<pathelement location="${client}/classes"/>
		<pathelement location="${server}/classes"/>
		<pathelement location="${demo}/classes"/>
		<pathelement location="${jca-client}/classes"/>
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

  <path id="javadoc.classpath">
		<pathelement location="${bin}"/>
    <path refid="project.classpath"/>	
		<pathelement location="${gs.home}/lib/jini/jsk-lib.jar"/>
		<pathelement location="${gs.home}/lib/jini/jsk-platform.jar"/>
		<pathelement location="${gs.home}/lib/openspaces/openspaces.jar"/>
		<pathelement location="${gs.home}/lib/spring/spring.jar"/>
		<pathelement location="${gs.home}/lib/JSpaces.jar"/>
  </path>

  <path id="run.classpath">
		<pathelement location="${config}"/>
    <path refid="project.classpath"/>	
  </path>

	<!-- ========================================================================= -->
	<!--                                    Clean                                  -->
	<!-- ========================================================================= -->

  <target name="clean" description="">
    <delete dir="${build}" quiet="true"/>
  </target>               

  <target name="clean.deploy" description="clean the deploy folder">
    <delete dir="${deploy}" quiet="true"/>
	  <delete dir="${runtime}" quiet="true"/>
  </target>               

	<!-- ========================================================================= -->
	<!--                                    Init                                   -->
	<!-- ========================================================================= -->

	<target name="init" description="Initialize ressources">
 		<mkdir dir="${build}"/>
		<available file="${NSIS.home}/makensis.exe" property="NSIS.present"/>
		<available type="dir" file="${basedir}/../samples-pack" property="samples.pack.present"/>
		<available type="dir" file="${basedir}/../JPPFQuickStart" property="jppfQuickStart.present"/>
		<!-- Format the build number to a 4 figures integer with leading zeroes if required -->
		<!-- The build number is also incremented by 1                                      -->
		<propertyfile file="${build.number.file}">
			<entry key="build.number" type="int" default="0000" operation="+" pattern="0000" />
		</propertyfile>
		<!-- Read the build number -->
	  <property file="${build.number.file}"/>
		<tstamp>
			<format property="now" pattern="yyyyMMdd"/>
		</tstamp>
	</target>

	<target name="init.deploy" description="Initialize ressources">
 		<mkdir dir="${runtime.driver}"/>
 		<mkdir dir="${runtime.node}"/>
	</target>

	<!-- ========================================================================= -->
	<!--                           Build the application                           -->
	<!-- ========================================================================= -->

  <target name="build" depends="init, compile, jar"/>
	<target name="rebuild" depends="clean, init, compile, jar"/>
	<target name="test" depends="clean, init, compile, jar, package, runtime, javadoc"/>
	<target name="deploy"
		depends="clean.deploy, rebuild, javadoc, doc, init.deploy, jca, package, runtime, screensaver, samples.pack, jppf.quick.start, jppf.gigaspaces"/>
	<target name="deploy.nojavadoc"
		depends="clean.deploy, rebuild, init.deploy, jca, package, runtime, screensaver, samples.pack, jppf.quick.start, jppf.gigaspaces"/>
  <target name="deploy.splash">
  	<splash showduration="500" imageurl="http://www.jppf.org/images/logo1.gif"/>
  	<antcall target="deploy"/>
  </target>

	<!-- ========================================================================= -->
	<!--                         Compile the application                           -->
	<!-- ========================================================================= -->

	<target name="compile" description="Compile" depends="init">
		<antcall target="compile.module"><param name="path" value="${node}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${common}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${client}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${admin}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${server}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${demo}"/></antcall>
  </target>

	<target name="compile.module">
 		<mkdir dir="${path}/classes"/>
		<javac srcdir="" destdir="${path}/classes"
			debug="on" deprecation="off" optimize="on" includes="**/*.java">
	    <classpath refid="project.classpath"/>
	    <compilerarg line="-Xlint:unchecked"/>
			<src path="${path}/src/java"/>
	    <src path="${path}/src/resources"/>
		</javac>
		<copy todir="${path}/classes">
			<fileset dir="${path}/src/resources">
				<exclude name="**/package.html"/>
			</fileset>
		</copy>
  </target>

	<!-- ========================================================================= -->
	<!--                         Generate the screensaver                          -->
	<!-- ========================================================================= -->

	<target name="screensaver" description="Generate the screen saver packaging for the nodes"
		depends="init" if="NSIS.present">
		<ant antfile="${basedir}/../node/bin/build.xml" inheritall="false"/>
  </target>

	<!-- ========================================================================= -->
	<!--                     Generate the JCA resource adapter                     -->
	<!-- ========================================================================= -->

	<target name="jca" description="Generate resource adapter for various application servers" depends="init">
		<ant antfile="${basedir}/../jca-client/build.xml" inheritall="false"/>
  </target>

	<!-- ========================================================================= -->
	<!--                         Generate the samples pack                         -->
	<!-- ========================================================================= -->

	<target name="samples.pack" description="Generate the screen saver packaging for the nodes"
		depends="init, build" if="samples.pack.present">
		<copy todir="${basedir}/../samples-pack/shared/lib">
			<fileset dir="${build}">
				<include name="jppf*.jar"/>
			</fileset>
		</copy>
		<ant antfile="${basedir}/../samples-pack/Fractals/build.xml" target="compile" inheritall="false"/>
		<ant antfile="${basedir}/../samples-pack/SequenceAlignment/build.xml" target="compile" inheritall="false"/>
		<ant antfile="${basedir}/../samples-pack/WebSearchEngine/build.xml" target="compile" inheritall="false"/>
		<ant antfile="${basedir}/../samples-pack/TomcatPort/build.xml" target="build" inheritall="false"/>
		<property name="samples.pack.file"
			value="${build}/${ant.project.name}-samples-pack-${version.number}.${build.number}-${now}.zip"/>
		<delete file="samples.pack.file" quiet="true"/>
		<zip destfile="${samples.pack.file}">
			<zipfileset dir="${basedir}/../samples-pack" prefix="samples-pack">
				<exclude name="**/*.log"/>
				<exclude name="**/javadoc/**/*.*"/>
			</zipfileset>
		</zip>
  </target>

	<!-- ========================================================================= -->
	<!--                      Generate the Quick Start Guide                       -->
	<!-- ========================================================================= -->

	<target name="jppf.quick.start" description="Generate the JPPF Quick Start Guide"
		depends="init, build" if="jppfQuickStart.present">
		<copy todir="${jppfQuickStart}/lib">
			<fileset dir="${build}">
				<include name="jppf-client.jar"/>
				<include name="jppf-common*.jar"/>
			</fileset>
		</copy>
		<ant antfile="${jppfQuickStart}/build.xml" target="compile" inheritall="false"/>
		<echo message="quick start destination: ${jppfQuickStart}/docs"/>
		<antcall target="doc.gen">
			<param name="source" value="${jppfQuickStart}/docs/doc-source"/>
			<param name="dest" value="${jppfQuickStart}/docs/"/>
			<param name="templates" value="${jppfQuickStart}/docs/templates/"/>
		</antcall>
		<property name="jppfQuickStart.file"
			value="${build}/JPPFQuickStart-${version.number}.${build.number}-${now}.zip"/>
		<delete file="jppfQuickStart.file" quiet="true"/>
		<zip destfile="${jppfQuickStart.file}">
			<zipfileset dir="${jppfQuickStart}" prefix="JPPFQuickStart">
				<exclude name="**/*.log"/>
				<exclude name="**/doc-source/**/*.*"/>
				<exclude name="**/templates/**/*.*"/>
			</zipfileset>
		</zip>
	  <delete dir="${home}/JPPFQuickStart" quiet="true"/>
 		<mkdir dir="${home}/JPPFQuickStart"/>
		<copy todir="${home}/JPPFQuickStart">
			<fileset dir="${jppfQuickStart}">
				<exclude name="**/*.log"/>
				<exclude name="**/doc-source/**/*.*"/>
				<exclude name="**/templates/**/*.*"/>
			</fileset>
		</copy>
  </target>

	<!-- ========================================================================= -->
	<!--                 Generate the JPPF-GigaSpaces integration                  -->
	<!-- ========================================================================= -->

	<target name="jppf.gigaspaces" description="Generate the JPPF-GigaSpaces integration package" depends="init, build">
		<copy todir="${gigaspaces}/JPPF-GigaSpaces-Common/lib">
			<fileset dir="${build}">
				<include name="jppf-client.jar"/>
				<include name="jppf-common*.jar"/>
			</fileset>
		</copy>
		<ant antfile="${gigaspaces}/build.xml" target="build" inheritall="false"/>
		<property name="gigaspaces.file"
			value="${build}/JPPF-GigaSpaces-${version.number}.${build.number}-${now}.zip"/>
		<delete file="gigaspaces.file" quiet="true"/>
		<zip destfile="${gigaspaces.file}">
			<zipfileset dir="${gigaspaces}" prefix="JPPF-GigaSpaces">
				<exclude name="**/CVS/**"/>
				<exclude name="**/*.log"/>
				<exclude name="**/*.classpath"/>
				<exclude name="**/*.project"/>
		</zipfileset>
		</zip>
  </target>

	<!-- ========================================================================= -->
	<!--                     Build the application jar files                       -->
	<!-- ========================================================================= -->

	<target name="jar" description="generates the application jar" depends="compile">
		<antcall target="jar.module"><param name="module" value="common"/></antcall>
		<antcall target="jar.module"><param name="module" value="node"/><param name="jar" value="common-node"/></antcall>
		<antcall target="jar.module"><param name="module" value="admin"/></antcall>
		<antcall target="jar.module"><param name="module" value="client"/></antcall>
		<antcall target="jar.module"><param name="module" value="server"/></antcall>
		<antcall target="jar.module"><param name="module" value="demo"/></antcall>
	</target>

	<target name="jar.module">
		<condition property="jar" value="${module}">
			<not>
				<isset property="jar"/>
			</not>
		</condition>
		<tstamp>
			<format property="readable.now" pattern="d-MMMM-yyyy hh:mm"/>
		</tstamp>
    <jar jarfile="${build}/jppf-${jar}.jar">
			<fileset dir="${basedir}/../${module}/classes"/>
			<fileset file="${bin}/build.number"/>
      <manifest>
        <attribute name="JPPF-Version" value="${version.number}"/>
        <attribute name="JPPF-Build" value="${build.number}"/>
			  <attribute name="JPPF-BuildDate" value="${readable.now}"/>
      </manifest>
    </jar>
  </target>

	<!-- ========================================================================= -->
	<!--                 Package the application for deployment                    -->
	<!-- ========================================================================= -->

	<target name="package" description="package the application into a release zip file" depends="rebuild">
		<property name="zip.prefix" value="${ant.project.name}-src-${version.number}"/>
		<property name="release.file" value="${build}/${ant.project.name}-src-${version.number}-${build.number}-${now}.zip"/>
		<delete file="${release.file}" quiet="true"/>
		<zip destfile="${release.file}">
			<zipfileset dir="${basedir}" prefix="${zip.prefix}/JPPF">
				<include name="build/jppf*.jar"/>
				<include name="bin/**/*.*"/>
				<include name="config/**/*.*"/>
				<!--<include name="docs/api/**/*.*"/>-->
				<include name="lib/**/*.*"/>
				<include name="${license.file}"/>
			</zipfileset>
			<zipfileset dir="${node}" prefix="${zip.prefix}/node"/>
			<zipfileset dir="${common}" prefix="${zip.prefix}/common"/>
			<zipfileset dir="${client}" prefix="${zip.prefix}/client"/>
			<zipfileset dir="${server}" prefix="${zip.prefix}/server"/>
			<zipfileset dir="${admin}" prefix="${zip.prefix}/admin"/>
			<zipfileset dir="${demo}" prefix="${zip.prefix}/demo" excludes="*.log"/>
			<zipfileset dir="${jca-client}" prefix="${zip.prefix}/jca-client"/>
		</zip>
	</target>

	<!-- ========================================================================= -->
	<!--             Package the j2ee connector for deployment                     -->
	<!-- ========================================================================= -->

	<target name="jppf.connector" description="" depends="rebuild">
		<property name="zip.prefix" value="${ant.project.name}-${version.number}"/>
		<property name="connector.release.file"
			value="${build}/${ant.project.name}-j2ee-connector-${version.number}-${build.number}-${now}.zip"/>
		<delete file="${connector.release.file}" quiet="true"/>
		<zip destfile="${connector.release.file}">
			<zipfileset dir="${jca-client}" prefix="${ant.project.name}-j2ee-connector-${version.number}"/>
		</zip>
	</target>

	<!-- ========================================================================= -->
	<!--                 Package the runtime components for deployment             -->
	<!-- ========================================================================= -->

	<target name="runtime" description="" depends="rebuild">
		<antcall target="runtime.driver"/>
		<antcall target="runtime.node"/>
		<antcall target="runtime.gui"/>
		<antcall target="runtime.multiplexer"/>
    <delete dir="${runtime}" quiet="true"/>
	</target>

	<!-- =========== Driver packaging =========== -->

	<target name="runtime.driver">
		<mkdir dir="${runtime.driver}/lib"/>
		<copy todir="${runtime.driver}/lib">
			<fileset dir="${build}">
				<include name="${ant.project.name}-common-node.jar"/>
				<include name="${ant.project.name}-common.jar"/>
				<include name="${ant.project.name}-server.jar"/>
			</fileset>
			<fileset dir="${lib}/log4j" includes="*.jar"/>
			<fileset dir="${lib}/ApacheCommons">
				<include name="commons-io*.jar"/>
				<include name="commons-logging*.jar"/>
			</fileset>
		</copy>
		<copy tofile="${runtime.driver}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.driver}"><fileset dir="${config}/driver"/></copy>
		<copy tofile="${runtime.driver}/config/jppf.policy" file="${config}/node/config/jppf.policy"/>
		<property name="runtime.driver.file" value="${build}/${ant.project.name}-driver-bin-${version.number}-${build.number}-${now}.zip"/>
		<delete file="${runtime.driver.file}" quiet="true"/>
		<zip destfile="${runtime.driver.file}">
			<zipfileset dir="${runtime.driver}" prefix="${ant.project.name}-${version.number}-driver"/>
		</zip>
    <delete dir="${runtime.driver}" quiet="true"/>
	</target>

	<!-- =========== Node packaging =========== -->

	<target name="runtime.node">
		<mkdir dir="${runtime.node}/lib"/>
		<copy todir="${runtime.node}/lib">
			<fileset dir="${build}" includes="${ant.project.name}-common-node.jar"/>
			<fileset dir="${lib}/ApacheCommons" includes="commons-logging*.jar"/>
			<fileset dir="${lib}/log4j" includes="*.jar"/>
		</copy>
		<copy tofile="${runtime.node}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.node}"><fileset dir="${config}/node"/></copy>
		<property name="runtime.node.file" value="${build}/${ant.project.name}-node-bin-${version.number}-${build.number}-${now}.zip"/>
		<delete file="${runtime.node.file}" quiet="true"/>
		<zip destfile="${runtime.node.file}">
			<zipfileset dir="${runtime.node}" prefix="${ant.project.name}-${version.number}-node"/>
		</zip>
    <delete dir="${runtime.node}" quiet="true"/>
	</target>

	<!-- =========== GUI packaging =========== -->

	<target name="runtime.gui">
		<mkdir dir="${runtime.gui}/lib"/>
		<copy todir="${runtime.gui}/lib">
			<fileset dir="${build}">
				<include name="${ant.project.name}-common-node.jar"/>
				<include name="${ant.project.name}-common.jar"/>
				<include name="${ant.project.name}-server.jar"/>
				<include name="${ant.project.name}-client.jar"/>
				<include name="${ant.project.name}-admin.jar"/>
			</fileset>
			<fileset dir="${lib}/log4j" includes="*.jar"/>
			<fileset dir="${lib}/ApacheCommons" includes="commons-logging*.jar"/>
			<fileset dir="${lib}/JFreeChart" includes="*.jar"/>
			<fileset dir="${lib}/Rhino" includes="*.jar"/>
			<fileset dir="${lib}/Substance" includes="*.jar"/>
			<fileset dir="${lib}/Groovy" includes="*.jar"/>
			<fileset dir="${lib}/MigLayout" includes="*.jar"/>
		</copy>
		<copy tofile="${runtime.gui}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.gui}"><fileset dir="${config}/gui"/></copy>
		<property name="runtime.gui.file" value="${build}/${ant.project.name}-gui-bin-${version.number}-${build.number}-${now}.zip"/>
		<delete file="${runtime.gui.file}" quiet="true"/>
		<zip destfile="${runtime.gui.file}">
			<zipfileset dir="${runtime.gui}" prefix="${ant.project.name}-${version.number}-gui"/>
		</zip>
    <delete dir="${runtime.gui}" quiet="true"/>
	</target>

	<!-- =========== Multiplexer packaging =========== -->

	<target name="runtime.multiplexer">
		<mkdir dir="${runtime.multiplexer}/lib"/>
		<copy todir="${runtime.multiplexer}/lib">
			<fileset dir="${build}">
				<include name="${ant.project.name}-common-node.jar"/>
				<include name="${ant.project.name}-common.jar"/>
			</fileset>
			<fileset dir="${lib}/log4j" includes="*.jar"/>
			<fileset dir="${lib}/ApacheCommons" includes="commons-logging*.jar"/>
		</copy>
		<copy tofile="${runtime.multiplexer}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.multiplexer}"><fileset dir="${config}/multiplexer"/></copy>
		<property name="runtime.multiplexer.file" value="${build}/${ant.project.name}-multiplexer-bin-${version.number}.${build.number}-${now}.zip"/>
		<delete file="${runtime.multiplexer.file}" quiet="true"/>
		<zip destfile="${runtime.multiplexer.file}">
			<zipfileset dir="${runtime.multiplexer}" includes="**/*.*" prefix="${ant.project.name}-${version.number}-multiplexer"/>
		</zip>
    <delete dir="${runtime.multiplexer}" quiet="true"/>
	</target>

	<!-- ========================================================================= -->
	<!--                     Build the web site content                            -->
	<!-- ========================================================================= -->

  <target name="doc" depends="doc.screenshots, doc.home">
	</target>

  <target name="doc.home" description="generates the project web site pages">
		<antcall target="doc.gen">
			<param name="source" value="docs/home/doc-source"/>
			<param name="dest" value="docs/home/"/>
			<param name="templates" value="docs/home/templates/"/>
		</antcall>
	</target>

	<target name="doc.overview" description="generates the project web site pages">
		<antcall target="doc.gen">
			<param name="source" value="${home}/overview-source"/>
			<param name="dest" value="${home}/"/>
			<param name="templates" value="${home}/templates/"/>
		</antcall>
	</target>

	<target name="doc.gen" description="generates the project web site pages">
		<java fork="yes" classname="org.jppf.doc.HtmlDocGenerator" classpathref="run.classpath">
			<jvmarg value="-Xmx128m" />
			<arg value="${source}"/>
			<arg value="${dest}"/>
			<arg value="${templates}"/>
		</java>       
	</target>

	<target name="doc.screenshots" description="generates the project web site pages">
		<java fork="yes" classname="org.jppf.utils.ThumbnailGenerator" classpathref="run.classpath">
			<jvmarg value="-Xmx128m" />
			<arg value="${home}/screenshots"/>
			<arg value="72"/>
			<arg value="72"/>
			<arg value="${home}/templates"/>
			<arg value="10"/>
		</java>       
	</target>

	<!-- ========================================================================= -->
	<!--                        Generate the Javadoc                               -->
	<!-- ========================================================================= -->

	<target name="javadoc" description="Generate all java doc">
		<echo message="gs.home = ${gs.home}"/>
    <delete dir="${javadoc}" quiet="true"/>
    <mkdir dir="${javadoc}"/>
		<javadoc destdir="${javadoc}" access="private" Windowtitle="JPPF"
			packagenames="**/*.*" classpathref="javadoc.classpath" verbose="false" use="true"
			stylesheetfile="${bin}/javadoc.css" additionalparam="-quiet">
			<packageset dir="${node}/src/java"/>
			<packageset dir="${common}/src/java"/>
			<packageset dir="${client}/src/java"/>
			<packageset dir="${server}/src/java"/>
			<packageset dir="${admin}/src/java"/>
			<packageset dir="${demo}/src/java"/>
			<packageset dir="${jca-client}/src/java"/>
			<packageset dir="${gigaspaces}/JPPF-GigaSpaces-Common/src"/>
			<packageset dir="${gigaspaces}/JPPF-GigaSpaces-Client/src"/>
			<packageset dir="${gigaspaces}/JPPF-GigaSpaces-ProcessingUnit/src"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
			<link href="http://java.sun.com/javaee/5/docs/api"/>
			<link href="http://junit.sourceforge.net/javadoc"/>
			<link href="http://xstream.codehaus.org/javadoc"/>
			<doctitle><![CDATA[Java Parallel Processing Framework v${version.number}]]></doctitle>
			<header>
				<![CDATA[
					<table>
					<tr>
						<td valign="center">
							<a href="http://www.jppf.org" target="_top">
								<img src="http://jppf-project.sourceforge.net/images/logo2.gif" border="0"/>
							</a>
						</td>
					</tr>
					</table>
				]]>
			</header>
			<bottom>
				<![CDATA[
					<font face="Arial" size=2 color="#C0C0C0"><i>Copyright &copy; 2005-2009 JPPF Team.</i></font>
				]]>
			</bottom>
		</javadoc>
		<copy todir="${docs}/api/resources" overwrite="true">
			<fileset dir="${bin}">
				<include name="*.gif"/>
				<include name="*.jpg"/>
			</fileset>
		</copy>
	</target>

	<target name="javadoc.package" description="Package the javadoc for deployment on the web site">
    <delete file="${docs}/api.tar.gz" quiet="true"/>
		<tar destfile="${docs}/api.tar.gz" compression="gzip" basedir="${docs}" includes="api/**/*.*"/>
    <delete dir="${home}/api" quiet="true"/>
    <mkdir dir="${home}/api"/>
		<copy todir="${home}/api">
			<fileset dir="${javadoc}"/>
		</copy>
	</target>

	<!-- ========================================================================= -->
	<!--                        Zip the whole workspace                            -->
	<!-- ========================================================================= -->

	<target name="zip.workspace" description="Zip the whole workspace">
    <delete file="${basedir}/../../JPPF.zip" quiet="true"/>
		<zip destfile="${basedir}/../../JPPF.zip">
			<zipfileset dir="${basedir}/.." prefix="JPPF">
				<exclude name="**/*.lock"/>
				<exclude name="**/JPPF/docs/home/**/*.*"/>
				<exclude name="**/.history/"/>
				<exclude name="**/JPPF/build/"/>
				<exclude name="**/.metadata/.plugins/net.sf.eclipsensis/help/**/*.*"/>
				<exclude name="**/*.history"/>
				<exclude name="**/*.index"/>
				<exclude name="**/*.ear"/>
				<exclude name="**/*.rar"/>
				<exclude name="**/*.war"/>
			</zipfileset>
		</zip>
	</target>

</project> 
