<!--
	Java Parallel Processing Framework.
	Copyright (C) 2005-2006 Laurent Cohen.
	lcohen@osp-chicago.com

	This library is free software; you can redistribute it and/or modify it
	under the terms of the GNU Lesser General Public License as published by the
	Free Software Foundation; either version 2.1 of the License, or (at your
	option) any later version.

	This library is distributed in the hope that it will be useful, but WITHOUT
	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
	for more details.

	You should have received a copy of the GNU Lesser General Public License
	along with this library; if not, write to the Free Software Foundation,
	Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->

<project name='jppf' default="build" basedir="..">

	<!-- ========================================================================= -->
	<!--                          Property definitions                             -->
	<!-- ========================================================================= -->


	<property name="common" value="${basedir}/../common"/>	
	<property name="admin" value="${basedir}/../admin"/>	
	<property name="client" value="${basedir}/../client"/>	
	<property name="node" value="${basedir}/../node"/>	
	<property name="server" value="${basedir}/../server"/>	
	<property name="demo" value="${basedir}/../demo"/>	

	<property name="build.properties.file" value="${basedir}/bin/build.properties"/>
  <property file="${build.properties.file}"/>
	<property name="build.number.file" value="${basedir}/bin/build.number"/>
	<property name="bin" value="${basedir}/bin"/>	
	<property name="data" value="${basedir}/data"/>	
	<property name="config" value="${basedir}/config"/>	
	<property name="build" value="${basedir}/build"/>	
	<property name="deploy" value="${build}/deploy"/>	
	<property name="deploy.lib" value="${deploy}/lib"/>
	<property name="deploy.build" value="${deploy}/build"/>
	<property name="deploy.config" value="${deploy}/config"/>	
	<property name="classes" value="${build}/classes"/>
	<property name="src" value="${basedir}/src"/>
	<property name="lib" value="${basedir}/lib"/>
	<property name="docs" value="${basedir}/docs"/>
	<property name="home" value="${docs}/home"/>
	<property name="examples" value="${basedir}/examples"/>
	<property name="javadoc" value="${docs}/api"/>
	<property name="app.jar.file" value="${ant.project.name}.jar"/>
	<property name="license.file" value="LICENSE.txt"/>
	<property name="runtime" value="${build}/runtime"/>
	<property name="runtime.driver" value="${build}/runtime/driver"/>
	<property name="runtime.node" value="${build}/runtime/node"/>

	<!-- ========================================================================= -->
	<!--                           Classpath definitions                           -->
	<!-- ========================================================================= -->

	<path id="project.classpath">
		<pathelement location="${common}/classes"/>
		<pathelement location="${node}/classes"/>
		<pathelement location="${admin}/classes"/>
		<pathelement location="${server}/classes"/>
		<pathelement location="${client}/classes"/>
		<pathelement location="${demo}/classes"/>
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

  <path id="javadoc.classpath">
		<pathelement location="${bin}"/>
    <path refid="project.classpath"/>	
  </path>

  <path id="run.classpath">
		<pathelement location="${config}"/>
    <path refid="project.classpath"/>	
  </path>

	<!-- ========================================================================= -->
	<!--                                    Clean                                  -->
	<!-- ========================================================================= -->

  <target name="clean" description="">
    <delete dir="${build}" quiet="true"/>
  </target>               

  <target name="clean.deploy" description="clean the deploy folder">
    <delete dir="${deploy}" quiet="true"/>
	  <delete dir="${runtime}" quiet="true"/>
  </target>               

	<!-- ========================================================================= -->
	<!--                                    Init                                   -->
	<!-- ========================================================================= -->

	<target name="init" description="Initialize ressources">
 		<mkdir dir="${build}"/>
	</target>

	<target name="init.deploy" description="Initialize ressources">
 		<mkdir dir="${runtime.driver}"/>
 		<mkdir dir="${runtime.node}"/>
	</target>

	<!-- ========================================================================= -->
	<!--                           Build the application                           -->
	<!-- ========================================================================= -->

  <target name="build" depends="init, compile, jar"/>
	<target name="rebuild" depends="clean, init, compile, jar"/>
	<target name="test" depends="clean, init, compile, jar, package, runtime, javadoc"/>
	<target name="deploy" depends="clean.deploy, rebuild, javadoc, doc, init.deploy, package, runtime"/>

	<!-- ========================================================================= -->
	<!--                         Compile the application                           -->
	<!-- ========================================================================= -->

	<target name="compile" description="Compile" depends="init">
		<antcall target="compile.module"><param name="path" value="${common}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${node}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${admin}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${client}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${server}"/></antcall>
		<antcall target="compile.module"><param name="path" value="${demo}"/></antcall>
  </target>

	<target name="compile.module">
		<javac srcdir="" destdir="${path}/classes"
			debug="on" deprecation="off" optimize="on" includes="**/*.java">
	    <classpath refid="project.classpath"/>
	    <compilerarg line="-Xlint:unchecked"/>
			<src path="${path}/src/java"/>
	    <src path="${path}/src/resources"/>
		</javac>
  </target>

	<!-- ========================================================================= -->
	<!--                     Build the application jar files                       -->
	<!-- ========================================================================= -->

	<target name="jar" description="generates the application jar" depends="compile">
		<antcall target="jar.module"><param name="module" value="common"/></antcall>
		<antcall target="jar.module"><param name="module" value="node"/></antcall>
		<antcall target="jar.module"><param name="module" value="admin"/></antcall>
		<antcall target="jar.module"><param name="module" value="client"/></antcall>
		<antcall target="jar.module"><param name="module" value="server"/></antcall>
		<antcall target="jar.module"><param name="module" value="demo"/></antcall>
	</target>

	<target name="jar.module">
    <jar jarfile="${build}/jppf-${module}.jar">
			<fileset dir="${basedir}/../${module}/classes"/>
		</jar>
  </target>

	<!-- ========================================================================= -->
	<!--                 Package the application for deployment                    -->
	<!-- ========================================================================= -->

	<target name="package" description="package the application into a release zip file" depends="rebuild">
		<!-- Format the build number to a 4 figures integer with leading zeroes if required -->
		<!-- The build number is also incremented by 1                                      -->
		<propertyfile file="${build.number.file}">
			<entry key="build.number" type="int" default="0000" operation="+" pattern="0000" />
		</propertyfile>
		<!-- Read the build number -->
	  <property file="${build.number.file}"/>
		<tstamp>
			<format property="now" pattern="yyyyMMdd"/>
		</tstamp>
		<property name="release.file"
			value="${build}/${ant.project.name}-full-src-${version.number}.${build.number}-${now}.zip"/>
		<delete file="${release.file}" quiet="true"/>

		<zip destfile="${release.file}">
			<zipfileset dir="${basedir}" prefix="${ant.project.name}-${version.number}/JPPF">
				<exclude name="build/**/*.*"/>
				<exclude name="docs/architecture/**/*.*"/>
				<exclude name="docs/home/**/*.*"/>
				<exclude name="docs/misc/**/*.*"/>
			</zipfileset>
			<zipfileset dir="${node}" prefix="${ant.project.name}-${version.number}/node"/>
			<zipfileset dir="${common}" prefix="${ant.project.name}-${version.number}/common"/>
			<zipfileset dir="${client}" prefix="${ant.project.name}-${version.number}/client"/>
			<zipfileset dir="${server}" prefix="${ant.project.name}-${version.number}/server"/>
			<zipfileset dir="${admin}" prefix="${ant.project.name}-${version.number}/admin"/>
			<zipfileset dir="${demo}" prefix="${ant.project.name}-${version.number}/demo"/>
		</zip>
	</target>

	<!-- ========================================================================= -->
	<!--                 Package the runtime components for deployment             -->
	<!-- ========================================================================= -->

	<target name="runtime" description="" depends="rebuild">
		<antcall target="runtime.driver"/>
		<antcall target="runtime.node"/>
    <delete dir="${runtime}" quiet="true"/>
	</target>

	<target name="runtime.driver">
		<copy tofile="${runtime.driver}/lib/node.jar" file="${build}/${ant.project.name}-node.jar"/>
		<copy tofile="${runtime.driver}/lib/common.jar" file="${build}/${ant.project.name}-common.jar"/>
		<copy tofile="${runtime.driver}/lib/server.jar" file="${build}/${ant.project.name}-server.jar"/>
		<copy todir="${runtime.driver}/lib">
			<fileset dir="${lib}/log4j">
				<include name="*.*"/>
			</fileset>
		</copy>
		<copy tofile="${runtime.driver}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.driver}/config">
			<fileset dir="${config}/driver"/>
		</copy>
		<copy tofile="${runtime.driver}/build.xml" file="${bin}/ant-driver.xml"/>
		<property name="runtime.driver.file"
			value="${build}/${ant.project.name}-driver-bin-${version.number}.${build.number}-${now}.zip"/>
		<delete file="${runtime.driver.file}" quiet="true"/>
		<zip destfile="${runtime.driver.file}">
			<zipfileset dir="${runtime.driver}" includes="**/*.*" prefix="${ant.project.name}-${version.number}-driver"/>
		</zip>
    <delete dir="${runtime.driver}" quiet="true"/>
	</target>

	<target name="runtime.node">
		<copy tofile="${runtime.node}/lib/node.jar" file="${build}/${ant.project.name}-node.jar"/>
		<copy tofile="${runtime.node}/${license.file}" file="${basedir}/${license.file}"/>
		<copy todir="${runtime.node}/config">
			<fileset dir="${config}/node"/>
		</copy>
		<copy tofile="${runtime.node}/build.xml" file="${bin}/ant-node.xml"/>
		<property name="runtime.node.file"
			value="${build}/${ant.project.name}-node-bin-${version.number}.${build.number}-${now}.zip"/>
		<delete file="${runtime.node.file}" quiet="true"/>
		<zip destfile="${runtime.node.file}">
			<zipfileset dir="${runtime.node}" includes="**/*.*" prefix="${ant.project.name}-${version.number}-node"/>
		</zip>
    <delete dir="${runtime.node}" quiet="true"/>
	</target>

	<!-- ========================================================================= -->
	<!--                     Build the web site content                            -->
	<!-- ========================================================================= -->

  <target name="doc" depends="doc.home, doc.overview">
	</target>

  <target name="doc.home" description="generates the project web site pages">
		<antcall target="doc.gen">
			<param name="source" value="docs/home/doc-source"/>
			<param name="dest" value="docs/home/"/>
			<param name="templates" value="docs/home/templates/"/>
		</antcall>
	</target>

	<target name="doc.overview" description="generates the project web site pages">
		<antcall target="doc.gen">
			<param name="source" value="${home}/overview-source"/>
			<param name="dest" value="${home}/"/>
			<param name="templates" value="${home}/templates/"/>
		</antcall>
	</target>

	<target name="doc.gen" description="generates the project web site pages">
		<java fork="yes" classname="org.jppf.doc.HtmlDocGenerator" classpathref="run.classpath">
			<jvmarg value="-Xmx128m" />
			<arg value="${source}"/>
			<arg value="${dest}"/>
			<arg value="${templates}"/>
		</java>       
	</target>

	<!-- ========================================================================= -->
	<!--                        Generate the Javadoc                               -->
	<!-- ========================================================================= -->

	<target name="javadoc" description="Generate all java doc">
    <delete dir="${javadoc}" quiet="true"/>
    <mkdir dir="${javadoc}"/>
		<javadoc destdir="${javadoc}" access="private" Windowtitle="JPPF"
			packagenames="**/*.*" classpathref="javadoc.classpath" verbose="false" use="true"
			stylesheetfile="${bin}/javadoc.css" additionalparam="-quiet">
			<packageset dir="${node}/src/java"/>
			<packageset dir="${common}/src/java"/>
			<packageset dir="${client}/src/java"/>
			<packageset dir="${server}/src/java"/>
			<packageset dir="${admin}/src/java"/>
			<packageset dir="${demo}/src/java"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
			<doctitle><![CDATA[Java Parallel Processing Framework v${version.number}]]></doctitle>
			<header>
				<![CDATA[
					<table>
					<tr>
						<td valign="center">
							<a href="http://jppf-project.sourceforge.net" target="_top">
								<img src="http://jppf-project.sourceforge.net/images/logo-small.gif" border="0" width="66" height="26"/>
							</a>
						</td>
						<td valign="center"><font face="Arial" color="#000000">&nbsp;&nbsp;Java Parallel Processing Framework</font></td>
					</tr>
					</table>
				]]>
			</header>
			<bottom>
				<![CDATA[
					<font face="Arial" size=2 color="#C0C0C0"><i>Copyright &copy; 2005-2006 Laurent Cohen.</i></font>
				]]>
			</bottom>
		</javadoc>
		<copy todir="${docs}/api/resources" overwrite="true">
			<fileset dir="${bin}">
				<include name="*.gif"/>
			</fileset>
		</copy>
	</target>

</project> 
