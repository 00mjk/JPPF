<!--
JPPF
  Copyright (C) 2005-2019 JPPF Team. 
http://www.jppf.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project name="JPPF-compile-jar" basedir=".." xmlns:if="ant:if" xmlns:unless="ant:unless">

  <!-- ==================================================================== -->
  <!--                         Compile the application                      -->
  <!-- ==================================================================== -->

  <target name="compile" depends="init, i18n" unless="compile.done">
    <echo message="(1) compile.done = ${compile.done}"/>
    <property name="compile.done" value="true"/>
    <path id="checkstyle.path">
      <fileset dir="${lib}/Checkstyle" includes="${Checkstyle.inc}"/>
    </path>
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpathref="checkstyle.path"/>
    <compile.module path="${jmxremote}"/>
    <compile.module path="${common}"/>
    <compile.module path="${jmxremote-nio}"/>
    <compile.module path="${node}"/>
    <compile.module path="${client}"/>
    <compile.module path="${admin}"/>
    <compile.module path="${server}"/>
    <compile.module path="${demo}"/>
    <compile.module.simple path="${application.template}"/>
  </target>

  <target name="compile.jmxremote" depends="init, i18n" unless="${compile.done}">
    <path id="checkstyle.path">
      <fileset dir="${lib}/Checkstyle" includes="${Checkstyle.inc}"/>
    </path>
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpathref="checkstyle.path"/>
    <compile.module path="${jmxremote}"/>
  </target>

  <!--
    Compile a project/module.
    Attributes:
    - path: the root path of the project or module
  -->
  <macrodef name="compile.module">
    <attribute name="path"/>
    <sequential>
      <echo message="compiling module '@{path}'"/>
      <checkstyle  config="${basedir}/CheckStyle_JPPF_config.xml">
        <fileset dir="@{path}/src/java" includes="**/*.java"/>
      </checkstyle>
      <mkdir dir="@{path}/classes"/>
      <javac srcdir="" destdir="@{path}/classes" source="1.8" target="1.8"
        debug="on" deprecation="off" optimize="on" includes="**/*.java" createMissingPackageInfoClass="false">
        <classpath refid="project.classpath"/>
        <compilerarg line=" -Xlint:none"/>
        <src path="@{path}/src/java"/>
        <src path="@{path}/src/resources"/>
      </javac>
      <copy todir="@{path}/classes">
        <fileset dir="@{path}/src/java" excludes="**/*.java,**/package.html"/>
        <fileset dir="@{path}/src/resources" excludes="**/package.html"/>
      </copy>
    </sequential>
  </macrodef>
  
  <!--
    Compile a project/module.
    Attributes:
    - path: the root path of the project or module
  -->
  <macrodef name="compile.module.simple">
    <attribute name="path"/>
    <sequential>
      <echo message="compiling module '@{path}'"/>
      <checkstyle  config="${basedir}/CheckStyle_JPPF_config.xml">
        <fileset dir="@{path}/src" includes="**/*.java"/>
      </checkstyle>
      <mkdir dir="@{path}/classes"/>
      <javac srcdir="" destdir="@{path}/classes" source="1.8" target="1.8"
        debug="on" deprecation="off" optimize="on" includes="**/*.java" createMissingPackageInfoClass="false">
        <classpath refid="project.classpath"/>
        <compilerarg line=" -Xlint:none"/>
        <src path="@{path}/src"/>
      </javac>
      <copy todir="@{path}/classes">
        <fileset dir="@{path}/src" excludes="**/*.java,**/package.html"/>
      </copy>
    </sequential>
  </macrodef>

  <!-- ==================================================================== -->
  <!--              Convert native translations to ascii                    -->
  <!-- ==================================================================== -->

  <target name="i18n" depends="init">
    <property name="i18n.dir" value="${admin}/src/resources/org/jppf/ui/i18n"/>
    <native2ascii encoding="windows-1251" src="${i18n.dir}/native/ru" dest="${i18n.dir}" includes="**/*.properties"/>
  </target>

  <!-- ==================================================================== -->
  <!--                     Build the jar files                              -->
  <!-- ==================================================================== -->

  <macrodef name="copy.jppf.jars">
    <attribute name="todir"/>
    <sequential>
      <copy todir="@{todir}">
        <fileset dir="${build}">
          <include name="jppf-node-${version.number}.jar"/>
          <include name="jppf-common-${version.number}.jar"/>
          <include name="jppf-jmxremote-nio-${version.number}.jar"/>
          <include name="jppf-client-${version.number}.jar"/>
          <include name="jppf-admin-${version.number}.jar"/>
          <include name="jppf-server-${version.number}.jar"/>
        </fileset>
      </copy>
    </sequential>
  </macrodef>

  <target name="jar" depends="compile" unless="jar.done">
    <jar.module module="node"/>
    <jar.module module="common"/>
    <jar.module module="jmxremote-nio"/>
    <jar.module module="client"/>
    <jar.module module="admin"/>
    <jar.module module="server"/>
    <jar.module module="demo"/>
    <property name="jar.done" value="true"/>
    <delete quiet="true">
      <fileset dir="${samples-pack}/shared/lib">
        <include name="jppf-*.jar"/>
        <exclude name="jppf-jmxremote*.jar"/>
      </fileset>
    </delete>
    <copy.jppf.jars todir="${samples-pack}/shared/lib"/>
    <property name="jars.done" value="true"/>
  </target>

  <!--
    Jar a project/module.
    Attributes:
    - module: the root path of the project or module
    - jar: the suffix of the generated jar file name jppf-@{jar}.jar
           defaults to the value of the "module" attribute
    - version: the jar version number
  -->
  <macrodef name="jar.module">
    <attribute name="module"/>
    <attribute name="jar" default="@{module}"/>
    <attribute name="version" default="${version.number}"/>
    <sequential>
      <jar jarfile="${build}/jppf-@{jar}-@{version}.jar" index="true">
        <fileset dir="${basedir}/../@{module}/classes" excludes="**/package-info.class"/>
        <manifest>
          <attribute name="JPPF-Version" value="@{version}"/>
          <attribute name="JPPF-Build" value="${build.number}"/>
          <attribute name="JPPF-BuildDate" value="${readable.now}"/>
        </manifest>
      </jar>
    </sequential>
  </macrodef>

  <!-- ==================================================================== -->
  <!--                     Build the source jar files                       -->
  <!-- ==================================================================== -->

  <target name="jar.src" depends="compile" unless="jar.src.done">
    <jar.src.module module="common"/>
    <jar.src.module module="jmxremote-nio"/>
    <jar.src.module module="node"/>
    <jar.src.module module="admin"/>
    <jar.src.module module="client"/>
    <jar.src.module module="server"/>
    <jar.src.module module="demo"/>
    <property name="jar.src.done" value="true"/>
  </target>

  <!--
    Build the source jar of a project/module.
    Attributes:
    - module: the root path of the project or module
    - jar: the suffix of the generated jar file name jppf-@{jar}.jar
           defaults to the value of the "module" attribute
  -->
  <macrodef name="jar.src.module">
    <attribute name="module"/>
    <attribute name="jar" default="@{module}"/>
    <attribute name="version" default="${version.number}"/>
    <sequential>
      <jar jarfile="${build}/jppf-@{jar}-src-@{version}.jar" index="true">
        <fileset dir="${basedir}/../@{module}/src/java"/>
        <fileset dir="${basedir}/../@{module}/src/resources"/>
        <fileset file="${bin}/build.number"/>
        <manifest>
          <attribute name="JPPF-Version" value="${version.number}"/>
          <attribute name="JPPF-Build" value="${build.number}"/>
          <attribute name="JPPF-BuildDate" value="${readable.now}"/>
        </manifest>
      </jar>
    </sequential>
  </macrodef>

  <!-- ==================================================================== -->
  <!--               Build the logging formatter jar                        -->
  <!-- ==================================================================== -->

  <target name="jar.logging" depends="compile">
    <jar jarfile="${build}/jppf-logging-formatter.jar" index="true">
      <fileset dir="${basedir}/../node/classes">
        <include name="**/JPPFFileHandler.class"/>
        <include name="**/JPPFLogFormatter.class"/>
        <include name="**/StringUtils.class"/>
      </fileset>
      <manifest>
        <attribute name="JPPF-Version" value="${version.number}"/>
        <attribute name="JPPF-Build" value="${build.number}"/>
        <attribute name="JPPF-BuildDate" value="${readable.now}"/>
      </manifest>
    </jar>
  </target>

</project>
