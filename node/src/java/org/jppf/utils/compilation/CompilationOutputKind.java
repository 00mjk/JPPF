/*
 * JPPF.
 * Copyright (C) 2005-2012 JPPF Team.
 * http://www.jppf.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jppf.utils.compilation;

import javax.tools.*;

/**
 * An enumeration of the possible kinds of output generated by a {@link SourceCompiler}.
 * @author Laurent Cohen
 */
public enum CompilationOutputKind
{
  /**
   * Output is written as class files on the file system.
   */
  FILE_SYSTEM {
    @Override
    public JavaFileManager getFileManager(final JavaCompiler compiler) {
      return compiler.getStandardFileManager(null, null, null);
    }
  },
  /**
   * Output is written to memory.
   */
  MEMORY {
    @Override
    public JavaFileManager getFileManager(final JavaCompiler compiler) {
      return new InMemoryFileManager(compiler.getStandardFileManager(null, null, null));
    }
  };

  /**
   * Creates a file manager appropriate for the type of output.
   * @param compiler the compiler from which to derive the file manager.
   * @return an instance of {@link JavaFileManager}.
   */
  public abstract JavaFileManager getFileManager(JavaCompiler compiler);
}
