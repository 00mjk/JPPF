<?xml version="1.0" encoding="UTF-8"?>
<!--
	JPPF.
	 Copyright (C) 2005-2014 JPPF Team. 
	http://www.jppf.org

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<opt:main xmlns:opt="http://www.jppf.org/Options.xsd" name="nodeProvisioningPanel" type="page" i18n="org.jppf.ui.i18n.NodeDataPage">
	<property name="label" value="Node provisioning"/>
	<property name="layoutConstraints" value="flowy, fill"/>
	<property name="componentConstraints" value=""/>

	<child name="mainArea" type="page">
		<property name="layoutConstraints" value="fill, flowy"/>
		<property name="componentConstraints" value="grow, push"/>
		<property name="bordered" value="false"/>

    <!-- Numbr of slaves spinner -->
    <child name="nbSlaves" type="SpinnerNumber">
      <property name="label" value="Number of slave nodes"/>
      <property name="tooltip" value="Number of slave nodes to provision. Slaves will be started or terminated as needed"/>
      <property name="value" value="0"/>
      <property name="minValue" value="0"/>
      <property name="maxValue" value="1000"/>
      <property name="persistent" value="true"/>
    </child>

    <!-- Use config overrides checkbox -->
		<child name="useOverrides" type="Boolean">
			<property name="label" value="Use configuration overrides"/>
			<property name="tooltip" value="Whether to specify configuration override for the slaves"/>
			<property name="persistent" value="true"/>
      <script language="groovy">
        void updateTextArea() {
          def ov = option.findFirstWithName("/configOverrides")
          ov.setEnabled(option.getValue())
          ov.setEditable(option.getValue())
        }
      </script>
      <initializer type="script">
        <script language="groovy">updateTextArea()</script>
      </initializer>
			<listener type="script">
        <script language="groovy">updateTextArea()</script>
      </listener>
		</child>

    <child name="configOverridesContainer" type="page">
      <property name="label" value="Configuration overrides"/>
      <property name="bordered" value="true"/>
      <property name="layoutConstraints" value="fill"/>
      <property name="componentConstraints" value="grow, push"/>

      <!-- Text area -->
  		<child name="configOverrides" type="TextArea">
  			<property name="scrollable" value="true"/>
  			<property name="editable" value="true"/>
  			<property name="label" value="Configuration overrides"/>
  			<property name="tooltip" value="Configuration properties that will override the default slaves configuration"/>
  			<property name="value" value=""/>
  			<property name="componentConstraints" value="grow, push, w 400, h 300"/>
        <property name="persistent" value="true"/>
      </child>

    </child>

  </child>

  <!-- OK and Cancel buttons -->
	<child name="provisioningButtons" type="page">
		<property name="layoutConstraints" value="fill"/>
		<property name="componentConstraints" value="growx 0"/>
		<property name="tooltip" value="Validate or cancel the updates"/>

		<child name="provisioningOK" type="Button">
			<property name="label" value="OK"/>
			<property name="tooltip" value="perform the provisioning operation"/>
		</child>

		<child name="provisioningCancel" type="Button">
			<property name="label" value="Cancel"/>
			<property name="tooltip" value="Close this dialog without applying any settings"/>
			<property name="componentConstraints" value="gap unrel"/>
		</child>

	</child>

</opt:main>
