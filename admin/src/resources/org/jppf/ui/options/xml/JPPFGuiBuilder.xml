<?xml version="1.0" encoding="UTF-8"?>
<!--
	Java Parallel Processing Framework.
  Copyright (C) 2005-2007 JPPF Team.
  http://www.jppf.org

	This library is free software; you can redistribute it and/or modify it
	under the terms of the GNU Lesser General Public License as published by the
	Free Software Foundation; either version 2.1 of the License, or (at your
	option) any later version.

	This library is distributed in the hope that it will be useful, but WITHOUT
	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
	for more details.

	You should have received a copy of the GNU Lesser General Public License
	along with this library; if not, write to the Free Software Foundation,
	Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<opt:main xmlns:opt="http://www.jppf.org/Options.xsd" name="PreviewTool" type="page">

	<property name="label" value="JPPF GUI Builder"/>
	<property name="scrollable" value="false"/>
	<property name="orientation" value="vertical"/>
	<property name="bordered" value="false"/>
	<property name="main" value="true"/>
	<property name="insets" value="0,0,0,0"/>
	<script language="javascript"><![CDATA[
		importPackage(Packages.java.lang);
		importPackage(Packages.java.util);
		importPackage(Packages.java.awt);
		importPackage(Packages.java.awt.event);
		importPackage(Packages.javax.swing);
		importPackage(Packages.javax.swing.event);
		importPackage(Packages.java.io);
		importPackage(Packages.org.jppf.utils);
		importPackage(Packages.org.jppf.ui.options);
		importPackage(Packages.org.jppf.ui.options.xml);
		importPackage(Packages.org.ujac.ui.editor);
	]]></script>
	<script language="javascript"><![CDATA[
		base = "org.jppf.ui.i18n";
		function refresh(text)
		{
			var builder = new OptionsPageBuilder();
			var bundlePath = StringUtils.getLocalisationBase(base, option.findLastWithName("/OpenBtn").getValue());
			var page = builder.buildPageFromContent(text, bundlePath);
			var pp = option.findLastWithName("/PreviewPanel");
			var list = new ArrayList(pp.getChildren());
			for (var i=0; i<list.size(); i++) pp.remove(list.get(i));
			pp.add(page);
			pp.add(new FillerOption(1, 1));
			pp.getUIComponent().updateUI();
		}

		function message(text)
		{
			var msgPane = option.findLastWithName("/MsgPanel");
			var msg = msgPane.getValue();
			msgPane.setValue(msg + text + "\n");
		}

		function load(file)
		{
			if ((file != null) && !"".equals(file.trim()))
			{
				var text = FileUtils.readTextFile(file);
				refresh(text);
				option.findLastWithName("/Editor").setValue(text);
				Frame.getFrames()[0].setTitle("JPPF GUI Builder - "+file);
			}
		}

		function save(file)
		{
			if ((file != null) && !"".equals(file.trim()))
			{
				var text = option.findLastWithName("/Editor").getValue();
				FileUtils.writeTextFile(file, text);
			}
		}
	]]></script>
	<initializer type="script">
		<script language="javascript"><![CDATA[
			var frame = new JFrame(option.getLabel());
			wa = 
			{
				windowClosing: function(event)
				{
					System.exit(0);
				}
			};
			frame.addWindowListener(new WindowAdapter(wa));
			frame.getContentPane().add(option.getUIComponent());
			frame.setSize(600, 600);
			frame.setVisible(true);
		]]></script>
	</initializer>

	<child name="Toolbar" type="Toolbar">
		<property name="label" value="GUI Builder Toolbar"/>
		<property name="tooltip" value=""/>

		<child name="OpenBtn" type="FileChooser">
			<property name="icon" value="/org/jppf/ui/resources/open.gif"/>
			<property name="tooltip" value="Loads an XML document"/>
			<property name="value" value=""/>
			<property name="extensions" value="xml; XML Files (*.xml)"/>
			<property name="orientation" value="vertical"/>
			<property name="type" value="open"/>
			<initializer type="script">
				<script language="javascript"><![CDATA[ load(); ]]></script>
			</initializer>
			<listener type="script">
				<script language="javascript"><![CDATA[
					load(option.getValue());
					option.findLastWithName("/SaveBtn").setValue(option.getValue());
					]]></script>
			</listener>
		</child>
	
		<child name="SaveBtn" type="Button">
			<property name="tooltip" value="Save the current document"/>
			<property name="icon" value="/org/jppf/ui/resources/save.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					var file = option.findLastWithName("/OpenBtn").getValue();
					if ((file != null) && !"".equals(file.trim())) save(file);
					else option.findLastWithName("/SaveAsBtn").doChooseFile();
				]]></script>
			</listener>
		</child>

		<child name="SaveAsBtn" type="FileChooser">
			<property name="icon" value="/org/jppf/ui/resources/saveas.gif"/>
			<property name="tooltip" value="Save the current document under a different name"/>
			<property name="value" value="../admin/src/resources/org/jppf/ui/options/xml"/>
			<property name="extensions" value="xml; XML Files (*.xml)"/>
			<property name="orientation" value="vertical"/>
			<property name="type" value="save"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					var file = option.getValue();
					if ((file != null) && !"".equals(file.trim()))
					{
						save(file);
						Frame.getFrames()[0].setTitle("JPPF GUI Builder - "+file);
						option.findLastWithName("/OpenBtn").setValue(option.getValue());
					}
					]]></script>
			</listener>
		</child>

		<child name="filler" type="ToolbarSeparator">
			<property name="width" value="10"/>
			<property name="height" value="1"/>
		</child>

		<child name="Copy" type="Button">
			<property name="tooltip" value="Copy the current selection"/>
			<property name="icon" value="/org/jppf/ui/resources/copy.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
				]]></script>
			</listener>
		</child>

		<child name="Cut" type="Button">
			<property name="tooltip" value="Cut the current selection"/>
			<property name="icon" value="/org/jppf/ui/resources/cut.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
				]]></script>
			</listener>
		</child>

		<child name="Paste" type="Button">
			<property name="tooltip" value="Paste"/>
			<property name="icon" value="/org/jppf/ui/resources/paste.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
				]]></script>
			</listener>
		</child>

		<child name="filler" type="ToolbarSeparator">
			<property name="width" value="10"/>
			<property name="height" value="1"/>
		</child>

		<child name="Refresh" type="Button">
			<property name="tooltip" value="Refreshes the preview panel from the XML document"/>
			<property name="icon" value="/org/jppf/ui/resources/refresh.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					refresh(option.findLastWithName("/Editor").getValue());
				]]></script>
			</listener>
		</child>

		<child name="Validate" type="Button">
			<property name="tooltip" value="Validates the current document against an XML schema"/>
			<property name="icon" value="/org/jppf/ui/resources/test.gif"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					var schemaReader = FileUtils.getFileReader("org/jppf/ui/options/xml/option.xsd");
					var text = option.findLastWithName("/Editor").getValue();
					var textReader = new StringReader(text);
					var reporter = new JPPFErrorReporter(option.findLastWithName("/OpenBtn").getValue());
					var validator = new SchemaValidator(reporter);
					try
					{
						validator.validate(textReader, schemaReader);
						if (reporter.errors.size() > 0) message(reporter.allErrorsAsStrings());
						else message("The document is valid");
					}
					catch(e)
					{
						var msg = "" + e;
						if (reporter.errors.size() > 0) msg = msg + "\n" + reporter.allErrorsAsStrings();
						message(msg);
					}
				]]></script>
			</listener>
		</child>

		<child name="filler" type="ToolbarSeparator">
			<property name="width" value="10"/>
			<property name="height" value="1"/>
		</child>

		<child name="LineHighlight" type="Boolean">
			<property name="label" value="Highlight Line"/>
			<property name="tooltip" value="Highlight the current line?"/>
			<property name="value" value="false"/>
			<property name="orientation" value="vertical"/>
			<initializer type="script">
				<script language="javascript"><![CDATA[
					editor = option.findLastWithName("/Editor").getTextArea();
					editor.setLineHighlightEnabled(option.getValue().booleanValue());
				]]></script>
			</initializer>
			<listener type="script">
				<script language="javascript"><![CDATA[
					editor = option.findLastWithName("/Editor").getTextArea();
					editor.setLineHighlightEnabled(option.getValue().booleanValue());
					]]></script>
			</listener>
		</child>

		<child name="PositionContainer" type="page">
			<property name="scrollable" value="false"/>
			<property name="bordered" value="false"/>
			<property name="orientation" value="horizontal"/>
			<property name="main" value="false"/>

			<child name="filler" type="Filler">
				<property name="width" value="10"/>
				<property name="height" value="1"/>
			</child>

			<child name="Position" type="Label">
				<property name="label" value="Position"/>
				<property name="tooltip" value="Current position in the document"/>
				<property name="value" value="line: 1   col: 1"/>
				<initializer type="script">
					<script language="javascript"><![CDATA[
						cl =
						{
							caretUpdate: function(event)
							{
								var line = this.ta.getCaretLine();
								var col = this.ta.getCaretPosition() - this.ta.getLineStartOffset(line) + 1;
								this.option.setValue("line: " + (line+1) + "   col: " + col);
							}
						}
						var editor = option.findLastWithName("/Editor").getTextArea();
						cl.option = option;
						cl.ta = editor;
						editor.addCaretListener(new CaretListener(cl));
					]]></script>
				</initializer>
			</child>

		</child>

	</child>

	<child name="MainPane" type="SplitPane">
		<property name="label" value="Selection and Preview"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="vertical"/>
		<property name="bordered" value="false"/>
		<property name="main" value="false"/>
		<property name="resizeWeight" value="0.8"/>

		<child name="TopPane" type="SplitPane">
			<property name="label" value="Selection and Preview"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="horizontal"/>
			<property name="bordered" value="false"/>
			<property name="main" value="false"/>
			<property name="resizeWeight" value="0.5"/>
	
			<child name="PreviewPanel" type="page">
				<property name="label" value="Preview"/>
				<property name="scrollable" value="true"/>
				<property name="orientation" value="vertical"/>
				<property name="bordered" value="true"/>
				<property name="main" value="false"/>
			</child>
	
			<child name="Editor" type="XMLEditor">
				<property name="label" value="XML Editor"/>
				<property name="tooltip" value=""/>
				<property name="value" value=""/>
				<property name="scrollable" value="true"/>
			</child>
	
		</child>

		<child name="BottomPanel" type="page">
			<property name="label" value="Preview"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="false"/>
			<property name="main" value="true"/>

			<child name="MsgToolbar" type="page">
				<property name="label" value="Preview"/>
				<property name="scrollable" value="false"/>
				<property name="orientation" value="horizontal"/>
				<property name="bordered" value="false"/>
				<property name="main" value="true"/>
				<property name="insets" value="0, 0, 0, 0"/>
				<property name="width" value="10"/>
				<property name="height" value="10"/>

				<child name="filler" type="Filler">
					<property name="width" value="5"/>
					<property name="height" value="1"/>
				</child>

				<child name="ClearMsgPanel" type="Button">
					<property name="tooltip" value="Clear messages"/>
					<property name="icon" value="/org/jppf/ui/resources/clear3.gif"/>
					<listener type="script">
						<script language="javascript"><![CDATA[
							option.findLastWithName("/MsgPanel").setValue("");
						]]></script>
					</listener>
				</child>

				<child name="filler" type="Filler">
					<property name="width" value="1"/>
					<property name="height" value="1"/>
				</child>

			</child>

			<child name="MsgPanel" type="TextArea">
				<property name="label" value="Messages panel"/>
				<property name="value" value=""/>
			</child>

		</child>

	</child>

</opt:main>
