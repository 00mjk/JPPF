<?xml version="1.0" encoding="UTF-8"?>
<!--
	Java Parallel Processing Framework.
	Copyright (C) 2005-2007 JPPF Team.
	http://www.jppf.org

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<opt:main xmlns:opt="http://www.jppf.org/Options.xsd" name="Admin" type="page">

	<property name="label" value="Admin"/>
	<property name="scrollable" value="false"/>
	<property name="orientation" value="vertical"/>
	<property name="bordered" value="false"/>
	<property name="main" value="true"/>
	<property name="tooltip" value="Perform the remote administration of the server"/>
	<script language="javascript"><![CDATA[
		importPackage(Packages.org.jppf.utils);
		importPackage(Packages.org.jppf.server.protocol);
		importPackage(Packages.org.jppf.ui.monitoring.data);
		importPackage(Packages.org.jppf.ui.options);
		importPackage(Packages.org.jppf.ui.options.event);
	]]></script>
	<script language="javascript"><![CDATA[
		BASE = "org.jppf.ui.i18n.AdminPage";
	]]></script>

	<!-- ===================================================================== -->
	<!--                   Top Panels                                          -->
	<!-- ===================================================================== -->
	
	<child name="AdminCommands" type="page">

		<property name="label" value="Admin Commands"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="horizontal"/>
		<property name="bordered" value="false"/>
		<property name="main" value="false"/>

		<!-- ===================================================================== -->
		<!--                Server shutdown/restart area                           -->
		<!-- ===================================================================== -->
	
		<child name="Server" type="page">
	
			<property name="label" value="Server Shutdown / Restart"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="true"/>
			<property name="main" value="false"/>
			<property name="tooltip" value="Stop and restart the server using the specified delays"/>
	
			<child name="Perform_Now" type="Button">
				<property name="label" value="Perform Now"/>
				<property name="tooltip" value="Sends the shutdown and/or restart request to the server"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						shutdownDelay = option.findElement("../Shutdown_delay").getValue();
						restartDelay = 0;
						var command;
						if (option.findElement("../Restart").getValue())
						{
							restartDelay = option.findElement("../Restart_delay").getValue();
							command = BundleParameter.SHUTDOWN_RESTART;
						}
						else command = BundleParameter.SHUTDOWN;
						pwd = option.findFirstWithName("/actualPwd").getValue();
						msg = StatsHandler.getInstance().requestShutdownRestart(pwd, command, shutdownDelay, restartDelay);
						option.findFirstWithName("/msgText").setValue(msg);
					]]></script>
				</listener>
			</child>
	
			<child name="Shutdown_delay" type="FormattedNumber">
				<property name="label" value="Shutdown delay"/>
				<property name="tooltip" value="delay, in milliseconds, before the server starts shutting down"/>
				<property name="value" value="3000"/>
				<property name="pattern" value="###,###,##0"/>
				<property name="persistent" value="true"/>
			</child>
	
			<child name="Restart" type="Boolean">
				<property name="label" value="Restart"/>
				<property name="tooltip" value="Determines whether the server should be restarted"/>
				<property name="value" value="true"/>
				<property name="persistent" value="true"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						option.findElement("../Restart_delay").setEnabled(option.getValue().booleanValue());
					]]></script>
				</listener>
			</child>
	
			<child name="Restart_delay" type="FormattedNumber">
				<property name="label" value="Restart delay"/>
				<property name="tooltip" value="delay, in milliseconds, before the server is restarted"/>
				<property name="value" value="3000"/>
				<property name="pattern" value="###,###,##0"/>
				<property name="persistent" value="true"/>
			</child>
	
		</child>
	
		<child name="filler" type="Filler">
			<property name="width" value="10"/>
			<property name="height" value="10"/>
		</child>

		<!-- ===================================================================== -->
		<!--          Administrator password configuration area                    -->
		<!-- ===================================================================== -->
	
		<child name="Admin_password" type="page">
	
			<property name="label" value="Administrator password"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="true"/>
			<property name="main" value="false"/>
	
			<child name="Change_password" type="Button">
				<property name="label" value="Change password"/>
				<property name="tooltip" value="Tells the server to change the administrator password"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						pwd = option.findFirstWithName("/actualPwd").getValue();
						newPwd = option.findFirstWithName("/newPwd").getValue();
						confirmPwd = option.findFirstWithName("/confirmPwd").getValue();
						if (validateNewPassword(newPwd, confirmPwd))
						{
							msg = StatsHandler.getInstance().changeAdminPassword(pwd, newPwd);
							option.findFirstWithName("/msgText").setValue(msg);
						}

						function validateNewPassword(newPwd, confirmPwd)
						{
							var msg;
							result = true;
							if ((newPwd == null) || "".equals(newPwd))
							{
								msg = LocalizationUtils.getLocalized(BASE, "empty.pwd.msg");
								result = false;
							}
							else if (!newPwd.equals(confirmPwd))
							{
								msg = LocalizationUtils.getLocalized(BASE, "pwd.match.err.msg");
								result = false;
							}
							if (!result) option.findFirstWithName("/msgText").setValue(msg);
							return result;
						}
					]]></script>
				</listener>
			</child>
	
			<child name="actualPwd" type="Password">
				<property name="label" value="Enter password"/>
				<property name="tooltip" value="The current administrator password"/>
				<property name="value" value=""/>
			</child>
	
			<child name="newPwd" type="Password">
				<property name="label" value="New password"/>
				<property name="tooltip" value="Enter the new administrator password"/>
				<property name="value" value=""/>
			</child>
	
			<child name="confirmPwd" type="Password">
				<property name="label" value="Confirm new password"/>
				<property name="tooltip" value="Confirm the new administrator password"/>
				<property name="value" value=""/>
			</child>
	
		</child>

	</child>

	<!-- ===================================================================== -->
	<!--                    Bottom Panels                                      -->
	<!-- ===================================================================== -->
	
	<child name="AdminPreferences" type="page">

		<property name="label" value="Monitor"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="horizontal"/>
		<property name="bordered" value="true"/>
		<property name="main" value="false"/>

		<child name="Interval" type="FormattedNumber">
			<property name="label" value="Refresh interval (ms)"/>
			<property name="tooltip" value="The time interval, in milliseconds, between servers requests to refresh the statistics"/>
			<property name="value" value="1000"/>
			<property name="pattern" value="###,###,##0"/>
			<property name="persistent" value="true"/>
		</child>

		<child name="ApplyInterval" type="Button">
			<property name="label" value="Apply"/>
			<property name="tooltip" value="Apply the new interval value immediately"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					interval = option.findElement("../Interval").getValue().longValue();
					handler = StatsHandler.getInstance();
					if (interval != handler.getRefreshInterval())
					{
						handler.setRefreshInterval(interval);
						handler.stopRefreshTimer();
						handler.startRefreshTimer();
					}
				]]></script>
			</listener>
		</child>

		<child name="filler" type="Filler">
			<property name="width" value="1"/>
			<property name="height" value="1"/>
		</child>

	</child>

	<!-- ===================================================================== -->
	<!--                   Server messages area                                -->
	<!-- ===================================================================== -->

	<child name="msgText" type="TextArea">
		<property name="label" value="Server Messages"/>
		<property name="tooltip" value="Feedback messages received from the server"/>
		<property name="value" value=""/>
	</child>

</opt:main>
