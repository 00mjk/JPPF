<?xml version="1.0" encoding="UTF-8"?>
<!--
	Java Parallel Processing Framework.
	Copyright (C) 2005-2007 JPPF Team.
	http://www.jppf.org

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<opt:main name="ChartsConfiguration" type="page" xmlns:opt="http://www.jppf.org/Options.xsd">

	<property name="label" value="Charts Configuration"/>
	<property name="scrollable" value="true"/>
	<property name="orientation" value="vertical"/>
	<property name="bordered" value="false"/>
	<property name="main" value="true"/>
	<script language="javascript"><![CDATA[
		importPackage(Packages.java.lang);
		importPackage(Packages.java.lang.reflect);
		importPackage(Packages.java.util);
		importPackage(Packages.java.awt);
		importPackage(Packages.javax.swing);
		importPackage(Packages.org.jppf.ui.monitoring.charts);
		importPackage(Packages.org.jppf.ui.monitoring.charts.config);
		importPackage(Packages.org.jppf.ui.monitoring.data);
		importPackage(Packages.org.jppf.ui.options);
		importPackage(Packages.org.jppf.ui.options.event);
		importPackage(Packages.org.jppf.utils);
	]]></script>
	<script language="javascript"><![CDATA[
		function populateChartsList(tabConfig, chartConfig)
		{
			var listOption = option.findFirstWithName("/ChartsList");
			if (tabConfig == null)
			{
				listOption.setItems(new ArrayList());
				listOption.setValue(null);
			}
			else
			{
				listOption.setItems(tabConfig.configs);
				values = new ArrayList();
				if (chartConfig != null) values.add(chartConfig);
				listOption.setValue(values);
			}
		}

		function populateTabsList(tab)
		{
			var listOption = option.findFirstWithName("/TabsList");
			listOption.setItems(JPPFChartBuilder.getInstance().getTabList());
			if (tab != null)
			{
				var value = new ArrayList();
				value.add(tab);
				listOption.setValue(value);
			}
		}

		function populateTabsCombo(tab)
		{
			var comboOption = option.findFirstWithName("/TabName");
			comboOption.setItems(JPPFChartBuilder.getInstance().getTabList());
			if (tab != null) comboOption.setValue(tab);
		}

		function populateFields(tab, config)
		{
			option.findFirstWithName("/ChartName").setValue(config.name);
			option.findFirstWithName("/TabName").setValue(tab);
			option.findFirstWithName("/Unit").setValue(config.unit == null ? "" : config.unit);
			option.findFirstWithName("/Precision").setValue(config.precision);
			option.findFirstWithName("/ChartType").setValue(config.type);
			option.findFirstWithName("/FieldsList").setValue(CollectionUtils.list(config.fields));
		}

		function getPopulatedConfiguration()
		{
			var config = new ChartConfiguration();
			config.name = option.findFirstWithName("/ChartName").getValue();
			config.unit = option.findFirstWithName("/Unit").getValue();
			if ("".equals(config.unit)) config.unit = null;
			config.precision = option.findFirstWithName("/Precision").getValue().intValue();
			config.type = option.findFirstWithName("/ChartType").getValue();
			var list = option.findFirstWithName("/FieldsList").getValue();
			var fields = java.lang.reflect.Array.newInstance(Fields, list.size());
			for (var i=0; i<fields.length; i++) fields[i] = list.get(i);
			config.fields = fields;
			return config;
		}

		function getTabConfig()
		{
			var values = getListValues("TabsList");
			if (values.isEmpty()) return null;
			return values.get(0);
		}

		function getChartConfig()
		{
			var values = getListValues("ChartsList");
			if (values.isEmpty()) return null;
			return values.get(0);
		}

		function getListValues(optionName)
		{
			if (option == null) return new ArrayList();
			var listOption = option.findFirstWithName("/" + optionName);
			var values = listOption.getValue();
			if (values == null) return new ArrayList();
			return values;
		}

		function getListItems(optionName)
		{
			if (option == null) return new ArrayList();
			var listOption = option.findFirstWithName("/" + optionName);
			var items = listOption.getItems();
			if (items == null) return new ArrayList();
			return items;
		}

		function changePreview(config)
		{
			if (config != null)
			{
				var cfg = JPPFChartBuilder.getInstance().createChart(config, true);
				var comp = option.findFirstWithName("/ChartPreview").getUIComponent();
				comp.removeAll();
				var c = new GridBagConstraints();
				c.weightx = 1.0;
				c.weighty = 1.0;
				c.gridheight = GridBagConstraints.REMAINDER;
				c.gridwidth = GridBagConstraints.REMAINDER;
				c.fill = GridBagConstraints.BOTH;
				comp.add(cfg.chartPanel, c);
				cfg.chart.setBackgroundPaint(comp.getBackground());
				comp.updateUI();
			}
		}

		function resetAllEnabledStates()
		{
			resetListEnabledStates("TabsList", "TabRemove", "TabUp", "TabDown");
			resetListEnabledStates("ChartsList", "ChartRemove", "ChartUp", "ChartDown");
		}

		function resetListEnabledStates(listName, btnName0, btnName1, btnName2)
		{
			var list = getListValues(listName);
			var o = list.isEmpty() ? null : list.get(0);
			var items = getListItems(listName);
			var idx = (o == null) ? -1 : items.indexOf(o);
			option.findFirstWithName("/" + btnName0).setEnabled(o != null);
			option.findFirstWithName("/" + btnName1).setEnabled(idx > 0);
			option.findFirstWithName("/" + btnName2).setEnabled((idx >= 0) && (idx < items.size() - 1));
		}

		function tabMoved()
		{
			root.setEventsEnabled(false);
			var tab = getTabConfig();
			var increment = "TabUp".equals(option.getName()) ? -1 : 1;
			var builder = JPPFChartBuilder.getInstance();
			builder.removeTab(tab);
			tab.position += increment;
			builder.addTab(tab);
			populateTabsList(tab);
			populateTabsCombo(tab);
			root.setEventsEnabled(true);
		}

		function chartMoved()
		{
			root.setEventsEnabled(false);
			var chartConfig = getChartConfig();
			var tabConfig = getTabConfig();
			var increment = "ChartUp".equals(option.getName()) ? -1 : 1;
			var builder = JPPFChartBuilder.getInstance();
			builder.removeChart(tabConfig, chartConfig);
			chartConfig.position += increment;
			builder.addChart(tabConfig, chartConfig);
			populateChartsList(tabConfig, chartConfig);
			root.setEventsEnabled(true);
		}
	]]></script>
	<initializer type="script">
		<script language="javascript"><![CDATA[
			option.setEventsEnabled(false);
			var values = CollectionUtils.list(ChartType.values());
			option.findFirstWithName("ChartType").setItems(values);
			values = CollectionUtils.list(StatsConstants.ALL_FIELDS);
			option.findFirstWithName("/FieldsList").setItems(values);
			populateTabsList(null);
			populateChartsList(null, null);
			populateTabsCombo(null);
			option.setEventsEnabled(true);
		]]></script>
	</initializer>

	<!-- ===================================================================== -->
	<!--                   Top Panels                                          -->
	<!-- ===================================================================== -->

	<child name="Top" type="page">
		<property name="label" value="Top"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="horizontal"/>
		<property name="bordered" value="false"/>
		<property name="main" value="false"/>

		<child name="TabsBtnPanel" type="page">
			<property name="label" value="Monitor"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="false"/>
			<property name="main" value="false"/>

			<child name="TabNew" type="Button">
				<property name="label" value="New"/>
				<property name="tooltip" value="Create a new tab"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						root.setEventsEnabled(false);
						var BASE_NAME = "org/jppf/ui/options/xml/ChartsConfigPage";
						var s = JOptionPane.showInputDialog(option.getUIComponent(), StringUtils.getLocalized(BASE_NAME, "new.tab.name"), 
							StringUtils.getLocalized(BASE_NAME, "new.tab.title"), JOptionPane.PLAIN_MESSAGE, null, null, null);
						if ((s != null) && !"".equals(s.trim()))
						{
							var tab = new TabConfiguration(s, -1);
							JPPFChartBuilder.getInstance().addTab(tab);
							populateTabsList(tab);
							populateTabsCombo(tab);
							populateChartsList(tab, null);
						}
						root.setEventsEnabled(true);
					]]></script>
				</listener>
			</child>

			<child name="TabRemove" type="Button">
				<property name="label" value="Remove"/>
				<property name="tooltip" value="Remove the tab"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						root.setEventsEnabled(false);
						JPPFChartBuilder.getInstance().removeTab(getTabConfig());
						populateTabsList(null);
						populateTabsCombo(null);
						populateChartsList(null, null);
						root.setEventsEnabled(true);
					]]></script>
				</listener>
			</child>

			<child name="TabUp" type="Button">
				<property name="label" value="Up"/>
				<property name="tooltip" value="Move the tab one position up"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						tabMoved();
					]]></script>
				</listener>
			</child>

			<child name="TabDown" type="Button">
				<property name="label" value="Down"/>
				<property name="tooltip" value="Move the tab one position down"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						tabMoved();
					]]></script>
				</listener>
			</child>

			<child name="filler" type="Filler">
				<property name="width" value="1"/>
				<property name="height" value="1"/>
			</child>

		</child>

		<child name="TabsList" type="List">
			<property name="label" value="Tabs"/>
			<property name="orientation" value="horizontal"/>
			<property name="tooltip" value="The list of active tabs"/>
			<property name="scrollable" value="true"/>
			<property name="bordered" value="true"/>
			<property name="value" value=""/>
			<property name="selection" value="single"/>
			<property name="width" value="140"/>
			<property name="height" value="80"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					root.setEventsEnabled(false);
					var values = option.getValue();
					if ((values != null) && !values.isEmpty())
					{
						populateChartsList(getTabConfig(), null);
						resetAllEnabledStates();
					}
					root.setEventsEnabled(true);
				]]></script>
			</listener>
		</child>

		<child name="filler" type="Filler">
			<property name="width" value="15"/>
			<property name="height" value="1"/>
		</child>

		<child name="ChartsBtnPanel" type="page">
			<property name="label" value="Monitor"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="false"/>
			<property name="main" value="false"/>

			<child name="ChartRemove" type="Button">
				<property name="label" value="Remove"/>
				<property name="tooltip" value="Remove the chart"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						option.findElement("/").setEventsEnabled(false);
						var tabConfig = getTabConfig();
						var chartConfig = getChartConfig();
						JPPFChartBuilder.getInstance().removeChart(tabConfig, chartConfig);
						populateChartsList(tabConfig, chartConfig);
						root.setEventsEnabled(true);
					]]></script>
				</listener>
			</child>

			<child name="ChartUp" type="Button">
				<property name="label" value="Up"/>
				<property name="tooltip" value="Move the chart one position up"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						chartMoved();
					]]></script>
				</listener>
			</child>

			<child name="ChartDown" type="Button">
				<property name="label" value="Down"/>
				<property name="tooltip" value="Move the chart one position down"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						chartMoved();
					]]></script>
				</listener>
			</child>

			<child name="filler" type="Filler">
				<property name="width" value="1"/>
				<property name="height" value="1"/>
			</child>

		</child>

		<child name="ChartsList" type="List">
			<property name="label" value="Charts"/>
			<property name="tooltip" value="The list of active charts in the selected tab"/>
			<property name="value" value=""/>
			<property name="selection" value="single"/>
			<property name="scrollable" value="true"/>
			<property name="bordered" value="true"/>
			<property name="orientation" value="horizontal"/>
			<property name="width" value="140"/>
			<property name="height" value="80"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					root.setEventsEnabled(false);
					var values = option.getValue();
					if ((values != null) && !values.isEmpty())
					{
						var config = values.get(0);
						populateFields(getTabConfig(), config);
						changePreview(config);
						resetAllEnabledStates();
					}
					root.setEventsEnabled(true);
				]]></script>
			</listener>
		</child>

		<child name="filler" type="Filler">
			<property name="width" value="1"/>
			<property name="height" value="1"/>
		</child>

	</child>
	
	<!-- ===================================================================== -->
	<!--                 Bottom Panels                                         -->
	<!-- ===================================================================== -->

	<child name="Bottom" type="page">
		<property name="label" value="Bottom"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="horizontal"/>
		<property name="bordered" value="false"/>
		<property name="main" value="false"/>

		<child name="ConfigFields" type="page">
			<property name="label" value="Configuration"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="true"/>
			<property name="main" value="false"/>

			<child name="TabName" type="ComboBox">
				<property name="label" value="Tab name"/>
				<property name="tooltip" value="Select the name of the tab this chart will be displayed in"/>
				<property name="value" value="Some tab name"/>
				<property name="orientation" value="horizontal"/>
				<item name="Some tab name" selected="true"/>
			</child>
	
			<child name="ChartName" type="PlainText">
				<property name="label" value="Chart Name"/>
				<property name="tooltip" value="Name of this chart"/>
				<property name="value" value=""/>
				<property name="orientation" value="horizontal"/>
			</child>
	
			<child name="ChartType" type="ComboBox">
				<property name="label" value="Chart type"/>
				<property name="tooltip" value="Select the type of chart"/>
				<property name="value" value="3D Bar Chart"/>
				<property name="orientation" value="horizontal"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						changePreview(getPopulatedConfiguration());
					]]></script>
				</listener>
			</child>
	
			<child name="Precision" type="SpinnerNumber">
				<property name="label" value="Precision"/>
				<property name="tooltip" value="Decimal number precision used in the chart labels"/>
				<property name="value" value="0"/>
				<property name="minValue" value="0"/>
				<property name="maxValue" value="5"/>
				<property name="orientation" value="horizontal"/>
			</child>

			<child name="Unit" type="PlainText">
				<property name="label" value="Unit"/>
				<property name="tooltip" value="Unit used in the chart labels"/>
				<property name="value" value=""/>
				<property name="orientation" value="horizontal"/>
			</child>
	
		</child>

		<child name="FieldsList" type="List">
			<property name="label" value="Fields"/>
			<property name="tooltip" value="The list of active charts in the selected tab"/>
			<property name="value" value=""/>
			<property name="selection" value="multiple"/>
			<property name="scrollable" value="true"/>
			<property name="bordered" value="true"/>
			<property name="orientation" value="horizontal"/>
			<property name="width" value="220"/>
			<property name="height" value="200"/>
			<listener type="script">
				<script language="javascript"><![CDATA[
					changePreview(getPopulatedConfiguration());
				]]></script>
			</listener>
		</child>

		<child name="ChartActionsPanel" type="page">
			<property name="label" value="Actions"/>
			<property name="scrollable" value="false"/>
			<property name="orientation" value="vertical"/>
			<property name="bordered" value="true"/>
			<property name="main" value="false"/>

			<child name="SaveNewChart" type="Button">
				<property name="label" value="Save as new"/>
				<property name="tooltip" value="Save the chart configuration as a new chart"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						root.setEventsEnabled(false);
						var config = getPopulatedConfiguration();
						var tabConfig = getTabConfig();
						JPPFChartBuilder.getInstance().addChart(tabConfig, config);
						populateTabsList(tabConfig);
						populateChartsList(tabConfig, config);
						root.setEventsEnabled(true);
					]]></script>
				</listener>
			</child>

			<child name="UpdateChart" type="Button">
				<property name="label" value="Update"/>
				<property name="tooltip" value="Update the chart with the new configuration"/>
				<listener type="script">
					<script language="javascript"><![CDATA[
						root.setEventsEnabled(false);
						var newTab = option.findFirstWithName("/TabName").getValue();
						var currentTab = getTabConfig();
						var oldConfig = getChartConfig();
						var newConfig = getPopulatedConfiguration();
						if (newTab == currentTab) newConfig.position = currentTab.configs.indexOf(oldConfig);
						var builder = JPPFChartBuilder.getInstance();
						builder.removeChart(currentTab, oldConfig);
						builder.addChart(newTab, newConfig);
						populateTabsList(newTab);
						populateChartsList(newTab, newConfig);
						root.setEventsEnabled(true);
					]]></script>
				</listener>
			</child>

			<child name="filler" type="Filler">
				<property name="width" value="1"/>
				<property name="height" value="1"/>
			</child>

		</child>

		<child name="filler" type="Filler">
			<property name="width" value="1"/>
			<property name="height" value="1"/>
		</child>

	</child>

	<child name="ChartPreview" type="page">
		<property name="label" value="Preview"/>
		<property name="scrollable" value="false"/>
		<property name="orientation" value="horizontal"/>
		<property name="bordered" value="true"/>
		<property name="main" value="false"/>
		<property name="tooltip" value="Display a preview of the chart with the current configuration parameters"/>
		<property name="width" value="200"/>
		<property name="height" value="150"/>
	
	</child>

</opt:main>
