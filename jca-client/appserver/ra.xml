<?xml version="1.0" encoding="UTF-8"?>
<connector xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.5" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd">
  <description>JPPF Resource Adapter</description>
  <display-name>JPPF</display-name>

  <vendor-name>JPPF.org</vendor-name>
  <eis-type>JPPF</eis-type>
  <resourceadapter-version>JPPF 1.0</resourceadapter-version>

  <license>
    <description></description>
    <license-required>false</license-required>
  </license>

  <resourceadapter>
    <resourceadapter-class>org.jppf.jca.spi.JPPFResourceAdapter</resourceadapter-class>

    <!-- JPPF Client Configuration -->
    <config-property>
      <description>Defines how the JPPF configuration is to be located.
        This property is defined in the format "type|path", where "type" can be one of:
        - "classpath": in this case "path" is a path to a properties file in one of the jars of the .rar file
          example: "classpath|resources/config/jppf.properties"
        - "url": "path" is a url that points to a properties file
          example: "url|file:///home/me/jppf/jppf.properties" (could be a http:// or ftp:// url as well)
        - "file": "path" is considered a path on the file system
          example: "file|/home/me/jppf/config/jppf.properties"
        When an invalid value, or a value that points to a non-existent configuration file, is specified for this,
        "classpath|jppf.properties" is used, to specify the jppf.properties file at the root of jppf-jca.jar in the rar file. 
      </description>
      <config-property-name>ConfigurationSource</config-property-name>
      <config-property-type>java.lang.String</config-property-type>
      <config-property-value>classpath|jppf.properties</config-property-value>
    </config-property>

    <!-- deprecated; this is the old way of specifiying the configuration -->
    <config-property>
      <config-property-name>ClientConfiguration</config-property-name>
      <config-property-type>java.lang.String</config-property-type>
      <config-property-value>
jppf.drivers = driver1 driver2

driver1.jppf.server.host = localhost
driver1.jppf.server.port = 11111
driver1.priority = 10
driver1.jppf.pool.size = 5

driver2.jppf.server.host = localhost
driver2.jppf.server.port = 11121
driver2.priority = 10
driver2.jppf.pool.size = 5

#jppf.management.port = 11098
#jppf.management.enabled = false
#jppf.client.max.init.time = 1000
#reconnect.initial.delay = 1
reconnect.max.time = 10
#reconnect.interval = 1

jppf.remote.execution.enabled = true
#jppf.local.execution.enabled = true
#jppf.local.execution.threads = 4

#jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
jppf.pool.size = 2

#jppf.data.transform.class = org.jppf.data.transform.DESCipherTransform
#jppf.object.stream.builder = org.jppf.serialization.XstreamObjectStreamBuilder
      </config-property-value>
    </config-property>

    <outbound-resourceadapter>
      <connection-definition>
        <managedconnectionfactory-class>org.jppf.jca.spi.JPPFManagedConnectionFactory</managedconnectionfactory-class>  
        <connectionfactory-interface>javax.resource.cci.ConnectionFactory</connectionfactory-interface>
        <connectionfactory-impl-class>org.jppf.jca.cci.JPPFConnectionFactory</connectionfactory-impl-class>
        <connection-interface>javax.resource.cci.Connection</connection-interface>
        <connection-impl-class>org.jppf.jca.cci.JPPFConnectionImpl</connection-impl-class>
      </connection-definition>

      <!--
        Please leave NoTransaction, the JPPF resource adapter has strictly no transaction support
        and will fail if it is used with a transaction.
      -->
      <transaction-support>NoTransaction</transaction-support>
      <reauthentication-support>false</reauthentication-support>
    </outbound-resourceadapter>

  </resourceadapter>
</connector>
