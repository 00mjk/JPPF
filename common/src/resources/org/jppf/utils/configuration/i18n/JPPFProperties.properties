jppf.admin.refresh.interval.health = Interval between updates of the JVM health data
jppf.admin.refresh.interval.stats = Interval between updates of the server statistics
jppf.admin.refresh.interval.topology = Interval between updates of the topology views
jppf.classloader.cache.size = Size of the class loader cache for the node
jppf.classloader.delegation = Class loader delegation mode: 'parent' or 'url'
jppf.classloader.file.lookup = Enable/disable lookup of classpath resources in the file system
jppf.config.overrides.path = Path to the temporary config overrides properties file
jppf.cpu.load.computation.interval = Determines the frequency at which the JVM's cpu load is recomputed, in ms
jppf.data.transform.class = Optional network data transformation
jppf.discovery.acceptMultipleInterfaces = Whether to discover server connections from multiple network interfaces
jppf.discovery.broadcast.exclude.ipv4 = Prevent broadcast to the specified IPv4 addresses (exclusive filter, server only)
jppf.discovery.broadcast.exclude.ipv6 = Prevent broadcast to the specified IPv6 addresses (exclusive filter, server only)
jppf.discovery.broadcast.include.ipv4 = Broadcast to the specified IPv4 addresses (inclusive filter, server only)
jppf.discovery.broadcast.include.ipv6 = Broadcast to the specified IPv6 addresses (inclusive filter, server only)
jppf.discovery.broadcast.interval = UDP broadcast interval in milliseconds
jppf.discovery.enabled = Enable/disable server discovery
jppf.discovery.exclude.ipv4 = IPv4 exclusion patterns for server discovery
jppf.discovery.exclude.ipv6 = IPv6 exclusion patterns for server discovery
jppf.discovery.group = Server discovery: UDP multicast group
jppf.discovery.include.ipv4 = IPv4 inclusion patterns for server discovery
jppf.discovery.include.ipv6 = IPv6 inclusion patterns for server discovery
jppf.discovery.port = Server discovery: UDP multicast port
jppf.discovery.priority = Priority assigned to discovered server connections (client/admiin console)
jppf.discovery.timeout = Server discovery timeout in milliseconds
jppf.disk.overflow.threshold = Ratio of available heap over the size of an object to deserialize, below which disk overflow is triggered
jppf.dotnet.bridge.initialized = Whether the node is .Net-enabled
jppf.drivers = Names of the manually configured servers in the client
jppf.gc.on.disk.overflow = Whether to call System.gc() and recompute the avalaible heap size before triggering disk overflow
jppf.gui.publish.mode = UI refresh mode for the job data panel: 'immediate_notifications' | 'deferred_notifications' | 'polling'
jppf.gui.publish.period = Interval between updates of the job data view
jppf.idle.interruptIfRunning = Node idle mode: whether to shutdown the node at once when user activity resumes or wait until the node is no longer executing tasks
jppf.idle.mode.enabled = Enable/disable the idle mode
jppf.idle.poll.interval = Node idle mode: how often the node will check for keyboard and mouse inactivity
jppf.idle.timeout = Node idle mode: the time of keyboard and mouse inactivity before considering the node idle
jppf.java.path = Full path to the Java executable
jppf.jmx.pool.size = JMX connection pool size when discovery is enabled
jppf.jmx.request.timeout = Timeout in milliseconds for JMX requests
jppf.jvm.options = JVM options for the node or server process
jppf.length.buffer.pool.size = Temporary buffer pool size for reading lengths as ints (size 4)
jppf.load.balancing.algorithm = Load balancing algorithm name
jppf.load.balancing.profile", "jppf = Load balancing parameters profile name
jppf.local.execution.enabled = Enable/disable local execution in the client
jppf.local.execution.priority = Priority assigned to the client local executor
jppf.local.execution.threads = Maximum threads to use for local execution
jppf.local.node.enabled = Whether to enable a node to run in the same JVM as the driver
jppf.low.memory.threshold = Minimum heap size in MB below which disk overflow is systematically triggered, to avoid heap fragmentation and ensure there's enough memory to deserialize job headers
jppf.management.connection.timeout = JMX client connection timeout in millis. 0 or less means no timeout
jppf.management.enabled = Enable/disable management of the node or server
jppf.management.host = Management server host
jppf.management.port = Management remote connector port
jppf.management.ssl.enabled = Enable/disable JMX via secure connections
jppf.management.ssl.port = Secure JMX server port
jppf.nio.check.connection = enable/disable network connection checks on write operations
jppf.nio.select.timeout = internal use
jppf.node.android = Whether the node is an Android node
jppf.node.check.connection = internal use
jppf.node.class = Internal use. The class of node to instantiate upon node startup. For instance Java and Android nodes use a different class
jppf.node.classloading.batch.period = How often batched class loadin requests are sent to the server
jppf.node.forwarding.pool.size = Size of the pool of threads used to process node forwarding requests and notifications
jppf.node.management.port = Node management port (to distinguish from server management port when local node is on)
jppf.node.management.ssl.port = Node secure management port (to distinguish from server management port when local node is on)
jppf.node.offline = Whether the node runs in offline mode 
jppf.node.provisioning.master = Whether the node is a master node
jppf.node.provisioning.master.uuid = UUID of the master node for a given slave node
jppf.node.provisioning.slave = Whether the node is a slave node
jppf.node.provisioning.slave.config.path = Directory where slave-specific configuration files are located
jppf.node.provisioning.slave.jvm.options = JVM options always added to the slave startup command
jppf.node.provisioning.slave.path.prefix = Path prefix for the root directory of slave nodes
jppf.node.provisioning.startup.slaves = Number of slaves to launch upon master node startup
jppf.object.serialization.class = Serialization scheme: name of a class implementing org.jppf.serialization.JPPFSerialization
jppf.peer.allow.orphans = Whether to send jobs to orphan peer servers
jppf.peer.discovery.enabled = Enable/disable peer server discovery
jppf.peer.discovery.removal.cleanup.interval = internal use
jppf.peer.handler.period = internal use
jppf.peer.processing.threads = internal use
jppf.peer.ssl.enabled = Toggle secure connections to remote peer servers
jppf.peers = Space-separated list of peer server names
jppf.policy.file = Path to the security policy file
jppf.pool.size = Connection pool size for discovered server conenctions
jppf.processing.threads = Number of processing threads in the node
jppf.provisioning.request.check.timeout = internal use
jppf.reconnect.initial.delay = Delay in seconds before the first (re)connection attempt
jppf.reconnect.interval = Frequency in seconds of reconnection attempts
jppf.reconnect.max.time = Time in seconds after which reconnection attempts stop. A negative value means never stop
jppf.recovery.enabled = Enable/disable recovery from hardware failures
jppf.recovery.max.retries = Maximum number of pings to the node before the connection is considered broken
jppf.recovery.read.timeout = Maximum ping response time from the node
jppf.recovery.reaper.pool.size = Number of threads allocated to the node connection reaper
jppf.recovery.reaper.run.interval = Interval between connection reaper runs
jppf.recovery.server.port = Port number for the detection of hardware failure
jppf.redirect.err = File to redirect System.err to
jppf.redirect.err.append = Append to existing file (true) or create a new one (false)
jppf.redirect.out = File to redirect System.out to
jppf.redirect.out.append = Append to existing file (true) or create a new one (false)
jppf.remote.execution.enabled = Enable/disable remote execution (client only)
jppf.resolve.addresses = Whether to resolve IP addresses
jppf.resource.cache.dir = Root location of the file-persisted caches
jppf.resource.cache.enabled = Whether the class loader resource cache is enabled
jppf.resource.cache.storage = Type of cache storage: either 'file' or 'memory'
jppf.resource.provider.class = internal use
jppf.screensaver.centerimage = Path to the larger image at the center of the screen (built-in default screensaver)
jppf.screensaver.class = Class name of an implementation of org.jppf.node.screensaver.JPPFScreenSaver
jppf.screensaver.enabled = Enable/disable the screen saver
jppf.screensaver.fullscreen = Whether to display the screen saver in full screen mode
jppf.screensaver.handle.collisions = Handle collisions between moving logos (built-in default screensaver)
jppf.screensaver.height = Height in pixels (windowed mode)
jppf.screensaver.icon = Path to the image for the frame's icon (windowed mode)
jppf.screensaver.location.x = Screensaver's on-screen X coordinate (windowed mode)
jppf.screensaver.location.y = Screensaver's on-screen Y coordinate (windowed mode)
jppf.screensaver.logo.path = Path(s) to the moving logo image(s) (built-in default screensaver)
jppf.screensaver.logos = Number of moving moving logos (built-in default screensaver)
jppf.screensaver.mouse.motion.close = Whether to close the screensaver on mouse motion (full screen mode)
jppf.screensaver.mouse.motion.delay = internal use
jppf.screensaver.node.listener = Class name of an implementation of  org.jppf.node.screensaver.NodeIntegration
jppf.screensaver.speed = Speed of moving moving logos! from 1 to 100 (built-in default screensaver)
jppf.screensaver.status.panel.alignment = Hhorizontal alignment of the status panel (built-in default screensaver)
jppf.screensaver.title = Title of the screensaver's JFrame in windowed mode
jppf.screensaver.width = Width in pixels (windowed mode)
jppf.script.default.language = Default script language for scripted property values
jppf.serialization.exception.hook = internal use
jppf.server.connection.strategy = Fully qualified name of a class implementing org.jppf.node.connection.DriverConnectionStrategy
jppf.server.host = Server host name or IP address
jppf.server.port = Server port
jppf.socket.buffer.size = Eeceive/send buffer size for socket connections
jppf.socket.keepalive = Enable/disable socket keepalive
jppf.socket.max-idle = Seconds a socket connection can remain idle before being closed (client only)
jppf.socket.tcp_nodelay = Enable/disable Nagle's algorithm
jppf.ssl.cipher.suites = Space-separated enabled cipher suites
jppf.ssl.client.auth = SSL client authentication level: 'none' | 'want' | 'need'
jppf.ssl.client.distinct.truststore = Whether to use a separate trust store for client certificates (server only)
jppf.ssl.client.truststore.file = Path to the client trust store in the file system or classpath
jppf.ssl.client.truststore.password = Plain text client trust store password
jppf.ssl.client.truststore.password.source = Client trust store password as an arbitrary source
jppf.ssl.client.truststore.source = Client trust store location as an arbitrary source
jppf.ssl.client.truststore.type = Client trust store format, e.g. 'JKS'
jppf.ssl.configuration.file = Path to the SSL configuration in the file system or classpath
jppf.ssl.configuration.source = SSL configuration as an arbitrary source
jppf.ssl.context.protocol = javax.net.ssl.SSLContext protocol
jppf.ssl.enabled = Enabled/diable secure connections
jppf.ssl.keystore.file = Path to the key store in the file system or classpath
jppf.ssl.keystore.password = Plain text key store password
jppf.ssl.keyststore.password.source = Key store password as an arbitrary source
jppf.ssl.keyststore.type = Key store format, e.g. 'JKS'
jppf.ssl.keytstore.source = Key store location as an arbitrary source
jppf.ssl.protocols = A list of space-separated enabled protocols
jppf.ssl.server.port = Server port number for secure connections
jppf.ssl.thread.pool.size = internal use
jppf.ssl.truststore.file = Path to the trust store in the file system or classpath
jppf.ssl.truststore.password = Plain text trust store password
jppf.ssl.truststore.password.source = Trust store password as an arbitrary source
jppf.ssl.truststore.source = Trust store location as an arbitrary source
jppf.ssl.truststore.type = Trust store format, e.g. 'JKS'
jppf.temp.buffer.pool.size = Maximum size of temporary buffers pool
jppf.temp.buffer.size = Size of temporary buffers used in I/O transfers
jppf.thread.manager.class = Type of thread pool to use in the node: either 'default' or 'org.jppf.server.node.fj.ThreadManagerForkJoin'
jppf.transition.thread.pool.size = Number of threads performing network I/O (server only)
jppf.ui.default.scrollbar.thickness = The default thickness of the scrollbars in the GUI
jppf.ui.splash = Whether to display the animated splash screen at console startup, defaults to false
jppf.ui.splash.delay = Interval between images in milliseconds
jppf.ui.splash.images = One or more paths to the images displayed in a rolling sequence (like a slide show), separated by '|' (pipe) characters
jppf.ui.splash.message = The fixed text displayed at center of the splash screen
