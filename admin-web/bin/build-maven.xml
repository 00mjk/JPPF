<!--
  JPPF
  Copyright (C) 2005-2019 JPPF Team. 
  http://www.jppf.org

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project name="WebAdminConsole-maven" default="build" basedir=".." xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:if="ant:if" xmlns:unless="ant:unless">

  <!-- ========================================================================= -->
  <!-- Generate the Maven artifacts                                              -->
  <!-- ========================================================================= -->

  <target name="maven" depends="maven.init, jar, maven.generate" description=""/>
  
  <target name="maven.init" depends="">
    <echoprop name="maven.staging"/>
    <echoprop name="maven.nopublish"/>
    <delete dir="${maven.dist}" quiet="true" includes="*.jar,pom.xml"/>
    <mkdir dir="${maven.dist}"/>
    <property file="${user.home}/gpg-passphrase.txt"/>
    <!-- defined maven snapshots and staging repository id and url -->
    <property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
    <property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots" />
    <property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
    <property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <property name="pom.file" value="${maven.dist}/pom.xml"/>
  </target>
  
  <target name="maven.generate" depends="">
    <maven.publish artifactId="${module.name}" pom="pom.xml" packaging="war"/>
    <maven.publish artifactId="${module.name}-embedded" pom="pom-embedded.xml" packaging="jar"/>
  </target>

  <macrodef name="maven.publish">
    <attribute name="artifactId"/>
    <attribute name="pom"/>
    <attribute name="packaging" default="jar"/>
    <sequential>
      <local name="artifact.prefix"/>
      <property name="artifact.prefix" value="@{artifactId}-${version.number}"/>
      <echoprop name="artifact.prefix"/>
      <copy file="${basedir}/@{pom}" toFile="${maven.dist}/@{pom}"/>
      <local name="maven.version"/>
      <property name="maven.version" value="${version.number}-SNAPSHOT" unless:true="${maven.staging}"/>
      <property name="maven.version" value="${version.number}" if:true="${maven.staging}"/>
      <replace file="${maven.dist}/@{pom}" token="@version@" value="${maven.version}"/>
      <echo message="maven-jar = ${maven.dist}/${artifact.prefix}"/>
      <maven.install file.prefix="${maven.dist}/${artifact.prefix}" pom="${maven.dist}/@{pom}" packaging="@{packaging}" />
      <publish.maven.snapshot file.prefix="${maven.dist}/${artifact.prefix}" pom="${maven.dist}/@{pom}" packaging="@{packaging}" unless:true="${maven.staging}"/>
      <publish.maven.staging file.prefix="${maven.dist}/${artifact.prefix}" pom="${maven.dist}/@{pom}" packaging="@{packaging}" if:true="${maven.staging}"/>
    </sequential>
  </macrodef>
  
  <!-- install an artifact in the local repository -->
  <macrodef name="maven.install">
    <attribute name="file.prefix"/>
    <attribute name="pom"/>
    <attribute name="packaging" default="jar"/>
    <sequential>
      <artifact:install file="@{file.prefix}.@{packaging}">
        <pom file="@{pom}"/>
        <attach file="@{file.prefix}-sources.jar" type="jar" classifier="sources"/>
        <attach file="@{file.prefix}-javadoc.jar" type="jar" classifier="javadoc"/>
      </artifact:install>
    </sequential>
  </macrodef>

  <!-- deploy an artifact to the Sonatype snapshots repository -->
  <macrodef name="publish.maven.snapshot">
    <attribute name="file.prefix"/>
    <attribute name="pom"/>
    <attribute name="packaging" default="jar"/>
    <sequential>
      <echo message="deploying @{packaging} to SNAPSHOT repository !!!"/>
      <local name="prefix"/>
      <property name="prefix" value="@{file.prefix}-SNAPSHOT"/>
      <copy file="@{file.prefix}.@{packaging}" toFile="${prefix}.@{packaging}"/>
      <copy file="@{file.prefix}-sources.jar" toFile="${prefix}-sources.jar"/>
      <copy file="@{file.prefix}-javadoc.jar" toFile="${prefix}-javadoc.jar"/>
      <artifact:mvn failonerror="true" unless:true="${maven.nopublish}">
        <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
        <arg value="-Durl=${maven-snapshots-repository-url}" />
        <arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
        <arg value="-DpomFile=@{pom}"/>
        <arg value="-Dfile=${prefix}.@{packaging}"/>
        <arg value="-Dpackaging=@{packaging}"/>
        <arg value="-Dsources=${prefix}-sources.jar"/>
        <arg value="-Djavadoc=${prefix}-javadoc.jar"/>
        <arg value="-Pgpg" />
      </artifact:mvn>
      <delete dir="${maven.dist}" quiet="true" includes="**/*SNAPSHOT*.*"/>
    </sequential>
  </macrodef>

  <!-- deploy an artifact to the Sonatype staging repository -->
  <macrodef name="publish.maven.staging">
    <attribute name="file.prefix"/>
    <attribute name="pom"/>
    <attribute name="packaging" default="jar"/>
    <sequential>
      <echo message="deploying @{packaging} to STAGING repository !!!"/>
      <artifact:mvn failonerror="true" unless:true="${maven.nopublish}">
        <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
        <arg value="-Durl=${maven-staging-repository-url}" />
        <arg value="-DrepositoryId=${maven-staging-repository-id}" />
        <arg value="-DpomFile=@{pom}"/>
        <arg value="-Dfile=@{file.prefix}.@{packaging}"/>
        <arg value="-Dpackaging=@{packaging}"/>
        <arg value="-Dsources=@{file.prefix}-sources.jar"/>
        <arg value="-Djavadoc=@{file.prefix}-javadoc.jar"/>
        <arg value="-Pgpg" />
      </artifact:mvn>
    </sequential>
  </macrodef>

  <target name="gpg.sign" depends="">
    <exec executable="gpg">
      <arg value="--yes"/>
      <arg value="--passphrase"/>
      <arg value="${gpg.pass}"/>
      <arg value="--armor"/>
      <arg value="--detach-sign"/>
      <arg value="${file.sign}"/>
    </exec>
  </target>
  
  <!-- ========================================================================= -->
  <!-- Jar                                                                       -->
  <!-- ========================================================================= -->
  
  <target name="jar" depends="war, javadoc">
    <jar.all type=""         dir="${classes.dir}" jar="${build.dir}/${module.name}-embedded-${version.number}.jar"/>
    <jar.all type="-sources" dir="${src.dir}"/>
    <copy file="${build.dir}/${war.name}-sources.jar" tofile="${build.dir}/${module.name}-embedded-${version.number}-sources.jar"/>
    <jar.all type="-javadoc" dir="${javadoc}"/>
     <copy file="${build.dir}/${war.name}-javadoc.jar" tofile="${build.dir}/${module.name}-embedded-${version.number}-javadoc.jar"/>
  </target>
  
  <macrodef name="jar.all">
    <attribute name="type"/>
    <attribute name="dir"/>
    <attribute name="jar" default="${build.dir}/${war.name}@{type}.jar"/>
    <sequential>
      <jar jarfile="@{jar}" index="true">
        <fileset dir="@{dir}"/>
        <manifest>
          <attribute name="Version" value="${version.number}"/>
          <attribute name="BuildDate" value="${readable.now}"/>
        </manifest>
      </jar>
      <echo message="*** ${build.dir}/${war.name}@{type}.jar ready ***"/>
    </sequential>
  </macrodef>

  <!-- ========================================================================= -->
  <!-- Generate the Javadoc                                                      -->
  <!-- ========================================================================= -->
  
  <target name="javadoc">
    <delete dir="${javadoc}" quiet="true"/>
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}" access="protected" Windowtitle="JPPF-JMX-Remote"
      packagenames="**/*.*" classpathref="project.classpath" stylesheetfile="${basedir}/bin/stylesheet.css" verbose="false" use="true" additionalparam="-quiet"
      doclet="org.jppf.javadoc.ExcludeDoclet" docletpath="${lib.dir}/jppf-javadoc-${version.number}.jar">
      <arg value="-J-Xmx512m"/>
      <packageset dir="${src.dir}/java"/>
      <link href="https://docs.oracle.com/javase/8/docs/api/"/>
      <link href="https://ci.apache.org/projects/wicket/apidocs/7.x/"/>
      <link href="https://docs.oracle.com/javaee/6/api/"/>
      <doctitle><![CDATA[JPPF Web Administration Console v${version.number}]]></doctitle>
      <header>
        <![CDATA[
          <table>
          <tr>
            <td valign="center">
              <a href="https://www.jppf.org" target="_top">
                <img src="https://www.jppf.org/images/jppf_group_large.gif" border="0"/>
              </a>
            </td>
          </tr>
          </table>
        ]]>
      </header>
      <bottom>
        <![CDATA[
          <font face="Arial" size=2 color="#808080"><i>Copyright &copy; 2018 JPPF Team.</i></font>
        ]]>
      </bottom>
    </javadoc>
    <copy todir="${javadoc}/resources" overwrite="true">
      <fileset dir="${basedir}/bin">
        <include name="*.gif"/>
        <include name="*.jpg"/>
      </fileset>
    </copy>
    <property name="javadoc.file" value="${jppf}/build/JPPFWebAdmin-${version.number}-javadoc.jar"/>
    <delete file="${javadoc.file}" quiet="true"/>
  </target>

</project>
