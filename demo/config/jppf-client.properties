#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2012 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#


#------------------------------------------------------------------------------#
# List of drivers this client may connect to                                   #
#------------------------------------------------------------------------------#

jppf.drivers = driver1
#jppf.drivers = driver1 driver2

#------------------------------------------------------------------------------#
# JMX management port of the driver                                            #
# default value is 11198; uncomment to specify a different value               #
#------------------------------------------------------------------------------#

#jppf.management.port = 11098
#jppf.management.enabled = false

#------------------------------------------------------------------------------#
# Priority given to the driver                                                 #
# The client is always connected to the available driver(s) with the highest   #
# priority. If multiple drivers have the same priority, they will be used as a #
# pool and tasks will be evenly distributed among them.                        #
# default value is 0; uncomment to specify a different value                   #
#------------------------------------------------------------------------------#

#driver1.priority = 0
#driver1.jppf.pool.size = 1
driver1.jppf.server.host = localhost
#driver1.jppf.server.port = 11111
driver1.jppf.server.port = 11443

driver2.jppf.server.host = localhost
driver2.jppf.server.port = 11112
#driver2.priority = 10

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# enable SSL. Default is false (disabled).
# if enabled, only SSL connections are established
#jppf.ssl.enabled = true

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = config/ssl/ssl.properties

# SSL configuration as an arbitrary source. Value is the fully qualified name
# of an implementation of Callable<InputStream> with optional arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl/ssl-server.properties

#------------------------------------------------------------------------------#
# Maximum time in milliseconds spent trying to initialize at least one         #
# connection, before releasing control to the main application thread.         #
# default value is 1000 (1 second); uncomment to specify a different value     #
#------------------------------------------------------------------------------#

#jppf.client.max.init.time = 1000

#------------------------------------------------------------------------------#
# Automatic recovery: number of seconds before the first reconnection attempt. #
# default value is 1; uncomment to specify a different value                   #
#------------------------------------------------------------------------------#

#reconnect.initial.delay = 1

#------------------------------------------------------------------------------#
# Automatic recovery: time after which the system stops trying to reconnect,   #
# in seconds.                                                                  #
# default value is 60; uncomment to specify a different value                  #
#------------------------------------------------------------------------------#

reconnect.max.time = 5

#------------------------------------------------------------------------------#
# Automatic recovery: time between two connection attempts, in seconds.        #
# default value is 1; uncomment to specify a different value                   #
#------------------------------------------------------------------------------#

#reconnect.interval = 1

#------------------------------------------------------------------------------#
#  Enable remote execution of tasks. Default value is true                     #
#------------------------------------------------------------------------------#

#jppf.remote.execution.enabled = false

#------------------------------------------------------------------------------#
#  Enable local execution of tasks. Default value is false                     #
#------------------------------------------------------------------------------#

#jppf.local.execution.enabled = true

#------------------------------------------------------------------------------#
# Number of threads to use for local execution                                 #
# The default value is the number of CPUs available to the JVM                 #
#------------------------------------------------------------------------------#

#jppf.local.execution.threads = 1

#------------------------------------------------------------------------------#
# Enable/Disable automatic discovery of JPPF drivers.                          #
# default value is true; uncomment to specify a different value                #
#------------------------------------------------------------------------------#

#jppf.discovery.enabled = false

#------------------------------------------------------------------------------#
# UDP multicast group to which drivers broadcast their connection parameters   #
# and to which clients and nodes listen. Default value is 230.0.0.1            #
#------------------------------------------------------------------------------#

#jppf.discovery.group = 230.0.0.1

#------------------------------------------------------------------------------#
# UDP multicast port to which drivers broadcast their connection parameters    #
# and to which clients and nodes listen. Default value is 11111                #
#------------------------------------------------------------------------------#

#jppf.discovery.port = 11111

jppf.discovery.acceptMultipleInterfaces = false
jppf.pool.size = 1

#------------------------------------------------------------------------------#
# IPV4 address patterns included in the server dscovery mechanism              #
#------------------------------------------------------------------------------#

#jppf.discovery.ipv4.include = 192.168.1.

#------------------------------------------------------------------------------#
# IPV4 address patterns excluded from the server dscovery mechanism            #
#------------------------------------------------------------------------------#

#jppf.discovery.ipv4.exclude = 192.168.1.-9; 192.168.1.100-

#------------------------------------------------------------------------------#
# IPV6 address patterns included in the server dscovery mechanism              #
#------------------------------------------------------------------------------#

#jppf.discovery.ipv6.include = 1080:0:0:0:8:800:200C-20FF:-

#------------------------------------------------------------------------------#
# IPV6 address patterns excluded from the server dscovery mechanism            #
#------------------------------------------------------------------------------#

#jppf.discovery.ipv6.exclude = 1080:0:0:0:8:800:200C-20FF:0C00-0EFF

#jppf.data.transform.class = org.jppf.example.dataencryption.SecureKeyCipherTransform

#jppf.object.stream.builder = org.jppf.serialization.XstreamObjectStreamBuilder
#jppf.object.stream.builder = org.jppf.serialization.GenericObjectStreamBuilder

#jppf.object.input.stream.class = org.jppf.serialization.JPPFObjectInputStream
#jppf.object.output.stream.class = org.jppf.serialization.JPPFObjectOutputStream

#jppf.management.connector = rmi

#------------------------------------------------------------------------------#
# the name of the load-balancing algorithm to use                              #
# pre-defined possible values are:                                             #
# manual | autotuned | proportional | rl | nodethreads                         #
# it can also be the name of a user-defined algorithm (since 2.0)              #
# default value is "proportional"                                              #
#------------------------------------------------------------------------------#
#jppf.load.balancing.algorithm = proportional
jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = customLoadBalancer

#------------------------------------------------------------------------------#
# name of the set of parameter values (aka profile) to use for the algorithm   #
#------------------------------------------------------------------------------#
#jppf.load.balancing.strategy = proportional
jppf.load.balancing.strategy = manual

# "manual" profile
strategy.manual.size = 1000000

#--------------------------------------------------------#
#           Matrix example                               #
#--------------------------------------------------------#

# matrix size
matrix.size = 300
task.nbRows = 1

# number of times the matrix multiplication is performed.
matrix.iterations = 1000

#--------------------------------------------------------#
#         Long Task example                              #
#--------------------------------------------------------#

# task execution length, in milliseconds
longtask.length = 15000

# number of tasks to execute at each iteration
longtask.number = 1

# number of iterations.
longtask.iterations = 1

#--------------------------------------------------------#
#         Task Notification example                      #
#--------------------------------------------------------#

# number of tasks to execute at each iteration
notification.nbTasks = 10

# number of stages to simulate for each task
notification.nbStages = 10

# stage execution length, in milliseconds
notification.duration = 1200

# number of iterations.
notification.iterations = 1

#--------------------------------------------------------#
#         Profiling tests                                #
#--------------------------------------------------------#

# number of time to execute at each iteration
profiling.nbTasks = 10
# number of iterations.
profiling.iterations = 100
# size of the data in each task in bytes
profiling.data.size = 40000

#jppf.object.stream.builder = org.jppf.serialization.XstreamObjectStreamBuilder

#jppf.execution.policy = ExecutionPolicy.xml

#--------------------------------------------------------#
#      Prime numbers computation example                 #
#--------------------------------------------------------#

prime.limit = 1
prime.batch.size = 100
#prime.start = 33222592
#prime.start =  1000000
prime.start = 50000

#--------------------------------------------------------#
#      N-body computation example                        #
#--------------------------------------------------------#

# charge on an antiproton
nbody.qp = 6

# magnetic field strength
nbody.b = 0.2
#nbody.b = 0.42

# simulation radius
nbody.radius = 500

nbody.dt = 0.01

# number of bodies (antiprotons)
#nbody.n = 400
nbody.n = 200

# number of time steps
nbody.time.steps = 20000

#nbody.bodies.per.task = 35
nbody.bodies.per.task = 25

#--------------------------------------------------------#
#      Data size example                                 #
#--------------------------------------------------------#

datasize.inNodeOnly = false
datasize.size = 120
datasize.unit = m
datasize.nbTasks = 2
datasize.iterations = 10

#--------------------------------------------------------#
#      Job management example                            #
#--------------------------------------------------------#

job.management.nbTasks = 10
job.management.duration = 5000

#------------------------------------------------------------------------------#
#         Parameters specific to the data dependency application               #
#------------------------------------------------------------------------------#

# Pseudo-random number generator, either "gaussian" or "uniform" (the default).
dataFactoryImpl = gaussian

# run mode, either snapshot-based or event-based. Possible values: event | snapshot
runMode = snapshot

# number of market data objects to use
nbMarketData = 2000

# number of trade objects
nbTrades = 10000

# min and max number of market data object a trade depends on (randomly chosen)
minDataPerTrade = 1
maxDataPerTrade = 6

# min and max intervals in milliseconds between ticker events (computed randomly in the specified range)
minTickerInterval = 50
maxTickerInterval = 51

# number of ticker events during the simulation; value <= 0 means no limit
nbTickerEvents = 0

# duration of the simulation in milliseconds (after that the ticker stops emitting events)
simulationDuration = 10000

# min and max simulated task duration in milliseconds (task duration is computed randomly in the specified range)
minTaskDuration = 120
maxTaskDuration = 121

# interval between 2 snapshots when running in snapshot-based mode
snapshotInterval = 2500


#jppf.submission.manager.maxwait.millis = 3000
#jppf.submission.manager.maxwait.nanos = 0

