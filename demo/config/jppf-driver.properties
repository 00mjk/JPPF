#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2016 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# port number to which the server listens for plain connections                #
# default value is 11111; uncomment to specify a different value               #
# to disable, specify a negative port number                                   #
#------------------------------------------------------------------------------#

jppf.server.port = 11111
#jppf.server.port = -1

#------------------------------------------------------------------------------#
# port number to which the server listens for secure connections               #
# default value is 11443; uncomment to specify a different value               #
# to disable, specify a negative port number                                   #
#------------------------------------------------------------------------------#

#jppf.ssl.server.port = 11443
jppf.ssl.server.port = -1

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# location of the SSL configuration on the file system
#jppf.ssl.configuration.file = config/ssl/ssl-server.properties

# SSL configuration as an aribtrary source. Value is the fully qualified name
# of an implementation of java.util.concurrent.Callable<InputStream> with optional space-separated arguments
jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl3/ssl-server.properties

# enable secure communications with other servers; defaults to false (disabled)#
#jppf.peer.ssl.enabled = true

#------------------------------------------------------------------------------#
# enabling JMX features                                                        #
#------------------------------------------------------------------------------#

# non-secure JMX connections; default is true (enabled)
#jppf.management.enabled = false

# secure JMX connections via SSL/TLS; default is false (disabled)
#jppf.management.ssl.enabled = true

#------------------------------------------------------------------------------#
# JMX management host IP address                                               #
# If not specified (recommended), the first non-local IP address (i.e. neither #
# 127.0.0.1 nor localhost) on this machine will be used. If no non-local IP is #
# found, localhost will be used.                                               #
#------------------------------------------------------------------------------#

#jppf.management.host = localhost

#------------------------------------------------------------------------------#
# JMX management port                                                          #
# default value is 11198; uncomment to specify a different value               #
# 2 or more JPPF components on the same machine must use distinct values       #
#------------------------------------------------------------------------------#

jppf.management.port = 11191
#jppf.management.ssl.port = 12191

#------------------------------------------------------------------------------#
# driver JVM options.                                                          #
#------------------------------------------------------------------------------#

# to be added in the jppf.jvm.options property as "jppf.jvm.options = ... -cp ${word.count.cp}"
word.count.cp = ../samples-pack/WordCount/classes
job.task.listener.cp = -cp ../x-test/classes
interceptor.options = -cp ../samples-pack/NetworkInterceptor/NetworkInterceptor.jar -Djppf.user.name=jppf1
job.dependencies = -cp ../samples-pack/JobDependencies/classes
ftprunner.cp = -cp ../x-ftprunner/FTPServer.jar \
	-cp ../x-ftprunner/lib/aopalliance-1.0.jar \
	-cp ../x-ftprunner/lib/commons-logging-1.1.jar \
	-cp ../x-ftprunner/lib/commons-net-2.2.jar \
	-cp ../x-ftprunner/lib/ftplet-api-1.0.5.jar \
	-cp ../x-ftprunner/lib/ftpserver-core-1.0.5.jar \
	-cp ../x-ftprunner/lib/mina-core-2.0.2.jar \
	-cp ../x-ftprunner/lib/spring-beans-2.5.5.jar \
	-cp ../x-ftprunner/lib/spring-context-2.5.5.jar \
	-cp ../x-ftprunner/lib/spring-core-2.5.5.jar

gc.opts = -Xloggc:driver_gc.log -XX:+PrintGCDetails

jppf.jvm.options = -Xmx2g -server -XX:+HeapDumpOnOutOfMemoryError -Duser.language=en -Djava.util.logging.config.file=config/logging-driver.properties ${job.task.listener.cp}

#------------------------------------------------------------------------------#
# To disable JMX RMI connector, the 2 options below work equally well:         #
# -XX:+DisableAttachMechanism                                                  #
# -Dsun.rmi.transport.tcp.maxConnectionThreads=0                               #
#------------------------------------------------------------------------------#

# with debug options
#jppf.jvm.options = -Xmx768m -server -Djava.util.logging.config.file=config/logging-driver.properties -Xrunjdwp:transport=dt_socket,address=localhost:8000,server=y,suspend=n

#------------------------------------------------------------------------------#
# Enable/Disable automatic discovery of JPPF drivers.                          #
# default value is true; uncomment to specify a different value                #
#------------------------------------------------------------------------------#

#jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
jppf.discovery.broadcast.interval = 500
jppf.peer.discovery.enabled = false
#jppf.discovery.broadcast.include.ipv6 = 0-FFFF
jppf.discovery.broadcast.exclude.ipv6 = -
#jppf.discovery.broadcast.include.ipv4 = 
#jppf.discovery.broadcast.exclude.ipv4 = -

#------------------------------------------------------------------------------#

#jppf.peers = driver2
jppf.peer.driver2.server.host = localhost
jppf.peer.driver2.server.port = 11112

#------------------------------------------------------------------------------#
# recovery configuration                                                       #
#------------------------------------------------------------------------------#

#jppf.recovery.enabled = true
jppf.recovery.max.retries = 3
jppf.recovery.read.timeout = 1000
jppf.recovery.server.port = 20004
jppf.recovery.reaper.run.interval = 1000
jppf.recovery.reaper.pool.size = 1

#------------------------------------------------------------------------------#
# the name of the load-balancing algorithm to use                              #
# pre-defined possible values are:                                             #
# manual | autotuned | proportional | rl | nodethreads                         #
# it can also be the name of a user-defined algorithm (since 2.0)              #
# default value is "manual"                                                    #
#------------------------------------------------------------------------------#

jppf.load.balancing.algorithm = proportional
#jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = rl
#jppf.load.balancing.algorithm = autotuned
#jppf.load.balancing.algorithm = customLoadBalancer
#jppf.load.balancing.algorithm = rl2

# name of the set of parameter values (aka profile) to use for the algorithm

#jppf.load.balancing.profile = manual
#jppf.load.balancing.profile = proportional
#jppf.load.balancing.profile = nodethreads
#jppf.load.balancing.profile = rl
#jppf.load.balancing.profile = autotuned
jppf.load.balancing.profile = test
#jppf.load.balancing.profile = rl2

# "manual" profile
jppf.load.balancing.profile.manual.size = 10

# "autotuned" profile
jppf.load.balancing.profile.autotuned.size = 5
jppf.load.balancing.profile.autotuned.minSamplesToAnalyse = 100
jppf.load.balancing.profile.autotuned.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.autotuned.maxDeviation = 0.2
jppf.load.balancing.profile.autotuned.maxGuessToStable = 50
jppf.load.balancing.profile.autotuned.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.autotuned.decreaseRatio = 0.2

# "proportional" profile
jppf.load.balancing.profile.proportional.performanceCacheSize = 500
jppf.load.balancing.profile.proportional.proportionalityFactor = 1
jppf.load.balancing.profile.proportional.initialSize = 5
jppf.load.balancing.profile.proportional.initialMeanTime = 3e9

# "rl" profile
jppf.load.balancing.profile.rl.performanceCacheSize = 1000
jppf.load.balancing.profile.rl.performanceVariationThreshold = 0.001
jppf.load.balancing.profile.rl.maxActionRange = 20

# "nodethreads" profile
jppf.load.balancing.profile.nodethreads.multiplicator = 2

# "rl2" profile
jppf.load.balancing.profile.rl2.performanceCacheSize = 1000
jppf.load.balancing.profile.rl2.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.rl2.minSamples = 20
jppf.load.balancing.profile.rl2.maxSamples = 100
jppf.load.balancing.profile.rl2.maxRelativeSize = 0.5

# "test" profile
# manual params
jppf.load.balancing.profile.test.size = 4
# autotuned params
#jppf.load.balancing.profile.test.minSamplesToAnalyse = 100
#jppf.load.balancing.profile.test.minSamplesToCheckConvergence = 50
#jppf.load.balancing.profile.test.maxDeviation = 0.2
#jppf.load.balancing.profile.test.maxGuessToStable = 50
#jppf.load.balancing.profile.test.sizeRatioDeviation = 1.5
#jppf.load.balancing.profile.test.decreaseRatio = 0.2
# proportional params
jppf.load.balancing.profile.test.proportionalityFactor = 1
jppf.load.balancing.profile.test.initialSize = 10
jppf.load.balancing.profile.test.initialMeanTime = 3e10
# rl params
#jppf.load.balancing.profile.test.maxActionRange = 20
#jppf.load.balancing.profile.test.maxTimesAtMinimum = 5
# nodethreads params
jppf.load.balancing.profile.test.multiplicator = 1
# rl2 params
jppf.load.balancing.profile.test.performanceCacheSize = 1000
jppf.load.balancing.profile.test.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.test.minSamples = 20
jppf.load.balancing.profile.test.maxSamples = 500
jppf.load.balancing.profile.test.maxRelativeSize = 0.5

#------------------------------------------------------------------------------#

# number of seconds before the first reconnection attempt
#jppf.reconnect.initial.delay = 1
# time after which the system stops trying to reconnect, in seconds
# a value of zero or less means it never stops
jppf.reconnect.max.time = 300
# time between two connection attempts, in seconds
jppf.reconnect.interval = 1

#------------------------------------------------------------------------------#
# includes                                                                     #
#------------------------------------------------------------------------------#

#!include file jppf-common.properties

#------------------------------------------------------------------------------#
# behavioral options                                                           #
#------------------------------------------------------------------------------#

#jppf.data.transform.class = org.jppf.example.dataencryption.SecureKeyCipherTransform

#jppf.io.buffer.size = 128

jppf.debug.enabled = true

#jppf.nio.check.connection = false

jppf.nio.select.timeout = 1000
#jppf.transition.thread.pool.size = 1

# readable driver uuid
#jppf.driver.uuid = d1

#jppf.discovery.broadcast.exclude.ipv6 = 0-FFFF
#jppf.discovery.broadcast.exclude.ipv6 = -
#jppf.discovery.broadcast.exclude.ipv4 = -

#------------------------------------------------------------------------------#
# local node configuration                                                     #
#------------------------------------------------------------------------------#

# readable local node uuid
#jppf.node.uuid = ln1

#jppf.local.node.enabled = true
jppf.processing.threads = 8
jppf.node.processing.threads = 8
jppf.classloader.cache.size = 1

#jppf.classloader.delegation = url
#jppf.thread.manager.class = org.jppf.server.node.fj.ThreadManagerForkJoin

#jppf.redirect.out = driver1_out.log
#jppf.redirect.err = driver1_err.log

#------------------------------------------------------------------------------#

z.pid = $script{ org.jppf.utils.SystemUtils.getPID(); }$
z.command = taskkill /F /PID ${z.pid}
z.generic.cmd = $script{ \
  var pid = org.jppf.utils.SystemUtils.getPID(); \
  var osName = java.lang.System.getProperty("os.name").toLowerCase(); \ 
  (osName.contains("windows") ? "taskkill /F /PID " : "kill -9 ") + pid; \
}$
