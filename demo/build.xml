<!--
	Java Parallel Processing Framework.
	Copyright (C) 2005-2006 Laurent Cohen.
	lcohen@osp-chicago.com

	This library is free software; you can redistribute it and/or modify it
	under the terms of the GNU Lesser General Public License as published by the
	Free Software Foundation; either version 2.1 of the License, or (at your
	option) any later version.

	This library is distributed in the hope that it will be useful, but WITHOUT
	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
	for more details.

	You should have received a copy of the GNU Lesser General Public License
	along with this library; if not, write to the Free Software Foundation,
	Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->

<project name='Demo' default="build" basedir=".">

	<!-- ========================================================================= -->
	<!--                          Property definitions                             -->
	<!-- ========================================================================= -->

	<property name="jppf"        value="${basedir}/../JPPF"/>
	<property name="jppf.lib"    value="${jppf}/lib"/>
	<property name="jppf.build"  value="${jppf}/build"/>
	<property name="config.dir"  value="${basedir}/config"/>
	<property name="classes.dir" value="${basedir}/classes"/>	
	<property name="src.dir"     value="${basedir}/src"/>

	<!-- ========================================================================= -->
	<!--                           Classpath definitions                           -->
	<!-- ========================================================================= -->

	<path id="project.classpath">
		<pathelement location="${classes.dir}"/>
		<pathelement location="${basedir}/../node/classes"/>
		<pathelement location="${basedir}/../common/classes"/>
		<pathelement location="${basedir}/../client/classes"/>
		<pathelement location="${basedir}/../server/classes"/>
		<pathelement location="${basedir}/../admin/classes"/>
		<pathelement location="${basedir}/../demo/classes"/>
		<pathelement location="${jppf.build}/classes"/>
		<fileset dir="${jppf.lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

  <path id="node.classpath">
		<pathelement location="${config.dir}"/>
		<pathelement location="${basedir}/../node/classes"/>
		<pathelement location="${jppf.lib}/log4j/log4j-1.2.9.jar"/>
  </path>

  <path id="gui.classpath">
		<pathelement location="${config.dir}"/>
    <path refid="project.classpath"/>	
  </path>

  <path id="client.classpath">
		<pathelement location="${config.dir}"/>
		<pathelement location="${basedir}/../node/classes"/>
		<pathelement location="${basedir}/../common/classes"/>
		<pathelement location="${basedir}/../client/classes"/>
		<pathelement location="${basedir}/../server/classes"/>
		<pathelement location="${basedir}/../demo/classes"/>
		<pathelement location="${jppf.lib}/log4j/log4j-1.2.9.jar"/>
  </path>

	<!-- ========================================================================= -->
	<!--                                    Clean                                  -->
	<!-- ========================================================================= -->

  <target name="clean">
    <delete dir="${classes.dir}" quiet="true"/>
  </target>               

	<!-- ========================================================================= -->
	<!--                                    Init                                   -->
	<!-- ========================================================================= -->

	<target name="init" description="Initialize ressources">
 		<mkdir dir="${classes.dir}"/>
	</target>

	<!-- ========================================================================= -->
	<!--                     Run the demo applications                             -->
	<!-- ========================================================================= -->

	<target name="run">
		<parallel>
			<antcall target="run.class.server"/>
			<sequential>
				<sleep milliseconds="5000"/>
				<antcall target="run.local"/>
			</sequential>
		</parallel>
	</target>

	<target name="run.demo1">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="1000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="2000"/>
				<antcall target="run.ui"/>
			</sequential>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.long.task"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.demo2">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="1000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="2000"/>
				<antcall target="run.ui"/>
			</sequential>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.matrix"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.demo3">
		<parallel>
			<antcall target="run.driver"/>
			<sequential>
				<sleep milliseconds="1000"/>
				<antcall target="run.node1"/>
			</sequential>
			<sequential>
				<sleep milliseconds="2000"/>
				<antcall target="run.ui"/>
			</sequential>
			<sequential>
				<sleep milliseconds="3000"/>
				<antcall target="run.matrix.async"/>
				<fail status="1" message="Demo has ended normally."/>
			</sequential>
		</parallel>
	</target>

	<target name="run.long.task">
		<echo message="starting the 'Long task' demo application"/>
		<java fork="yes" classname="sample.tasklength.LongTaskRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
		</java>       
	</target>

	<target name="run.matrix">
		<echo message="starting the 'Matrix Multiplication' demo application"/>
		<java fork="yes" classname="sample.matrix.MatrixRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
		</java>       
	</target>

	<target name="run.matrix.async">
		<echo message="starting the 'Matrix Multiplication With Non-Blocking Client' demo application"/>
		<java fork="yes" classname="sample.matrix.NonBlockingMatrixRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
		</java>       
	</target>

	<target name="run.matrix2">
		<echo message="starting the second demo application"/>
		<java fork="yes" classname="sample.matrix.MatrixRunner" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=jppf-client-2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-client-2.properties"/>
		</java>       
	</target>

	<target name="run.driver">
		<echo message="starting the JPPF driver"/>
		<java fork="yes" classname="org.jppf.server.DriverLauncher" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx32m"/>
			<jvmarg value="-Djppf.config=jppf-driver.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-driver.properties"/>
		</java>       
	</target>

	<target name="run.driver2">
		<echo message="starting the JPPF driver"/>
		<java fork="yes" classname="org.jppf.server.DriverLauncher" classpathref="client.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx32m"/>
			<jvmarg value="-Djppf.config=jppf-driver-2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-driver-2.properties"/>
		</java>       
	</target>

	<target name="run.node1">
		<echo message="starting local node"/>
		<java fork="yes" classname="org.jppf.node.NodeLauncher" classpathref="node.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=node1.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-node1.properties"/>
		</java>       
	</target>

	<target name="run.node2">
		<echo message="starting second local node"/>
		<java fork="yes" classname="org.jppf.node.NodeLauncher" classpathref="node.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=node2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-node2.properties"/>
		</java>       
	</target>

	<target name="run.node3">
		<echo message="starting third local node"/>
		<java fork="yes" classname="org.jppf.node.NodeLauncher" classpathref="node.classpath">
			<jvmarg value="-server"/>
			<jvmarg value="-Xmx64m"/>
			<jvmarg value="-Djppf.config=node3.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-node3.properties"/>
		</java>       
	</target>

	<target name="run.ui">
		<echo message="starting the server monitoring GUI"/>
		<java fork="yes" classname="org.jppf.ui.monitoring.UILauncher" classpathref="gui.classpath">
			<arg value="org/jppf/ui/options/xml/JPPFAdminTool.xml"/>
			<arg value="file"/>
			<jvmarg value="-Djppf.config=jppf-gui.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-gui.properties"/>
		</java>       
	</target>

	<target name="run.ui2">
		<echo message="starting the server monitoring GUI"/>
		<java fork="yes" classname="org.jppf.ui.monitoring.UILauncher" classpathref="gui.classpath">
			<arg value="org/jppf/ui/options/xml/JPPFAdminTool.xml"/>
			<arg value="file"/>
			<jvmarg value="-Djppf.config=jppf-gui-2.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-gui-2.properties"/>
		</java>       
	</target>

	<target name="run.ui.builder">
		<echo message="starting UI Builder Tool"/>
		<java fork="yes" classname="org.jppf.ui.monitoring.UILauncher" classpathref="gui.classpath">
			<arg value="org/jppf/ui/options/xml/JPPFGuiBuilder.xml"/>
			<arg value="file"/>
			<jvmarg value="-Djppf.config=jppf-gui.properties"/>
			<jvmarg value="-Dlog4j.configuration=log4j-gui-builder.properties"/>
		</java>       
	</target>

</project> 
